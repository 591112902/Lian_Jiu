//
//  MulPhotoCollectionViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/19.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//

#import "MulPhotoCollectionViewController.h"
#import "PhotoCollectionViewCell.h"
#import "GWLPhotoLibrayController.h"
#import "PhonwRecoveryCollectionReusableView.h"
#import "SelectViewController.h"
#import "UIImageView+WebCache.h"
@interface MulPhotoCollectionViewController ()<UIActionSheetDelegate,UIAlertViewDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>

@end

@implementation MulPhotoCollectionViewController
{
    
    UIImage *lastImage;
    NSString *headReuseIdentifier;
    NSIndexPath *currPaht;
}
static NSString * const reuseIdentifier = @"Cell";

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.collectionView.backgroundColor = BGColor;
    
    lastImage = [UIImage imageNamed:@"phone_default"];
    
    [self.collectionView registerNib:[UINib nibWithNibName:@"PhotoCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"PhotoCollectionViewCell"];
    [self.collectionView registerNib:[UINib nibWithNibName:@"FileCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"FileCollectionViewCell"];
    self.collectionView.showsVerticalScrollIndicator = NO;
    headReuseIdentifier = @"PhonwRecoveryCollectionReusableView";
    [self.collectionView registerClass:[PhonwRecoveryCollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:headReuseIdentifier];
    [self.collectionView registerClass:[PhonwRecoveryCollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:headReuseIdentifier];
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self layoutViewFram];
}
- (void)dealloc
{
    HZLog(@"%@------dealloc",[self class]);
}

#pragma mark - 添加图片
- (void)addPhoto
{
    UIActionSheet *actionSheet = [[UIActionSheet alloc]
                                  initWithTitle:CustomLocalizedString(@"添加照片", nil)
                                  delegate:self
                                  cancelButtonTitle:CustomLocalizedString(@"取消", nil)
                                  destructiveButtonTitle:nil
                                  otherButtonTitles:CustomLocalizedString(@"从相册获取", nil), CustomLocalizedString(@"拍照", nil),nil];
    actionSheet.actionSheetStyle = UIActionSheetStyleDefault;
    [actionSheet showInView:self.view.superview];
    
}
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 0) {
        [self addPhotoWithPhotoLibrary];
    }else if (buttonIndex == 1) {
        UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
        imagePicker.delegate = self;
        imagePicker.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        imagePicker.allowsEditing = YES;
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        [self presentViewController:imagePicker animated:YES completion:nil];
        imagePicker = nil;
    }
}
- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image= [info objectForKey:@"UIImagePickerControllerOriginalImage"];
    image = [image fixOrientation];
    [self displayImages:@[image]];
    image = nil;
}
- (void)addPhotoWithPhotoLibrary {
    //    __weak typeof (self)weakSelf = self;
    WS(weakSelf);
    GWLPhotoLibrayController *photoSelector = [GWLPhotoLibrayController photoLibrayControllerWithBlock:^(NSArray *images) {
        [weakSelf displayImages:images];
    }];
    PhotoMultModel *model = self.dataSource[currPaht.section];
    photoSelector.maxCount = model.photoNumber-model.photoDataSouc.count;
    photoSelector.multiAlbumSelect = YES;
    [self presentViewController:photoSelector animated:YES completion:nil];
}

- (void)displayImages:(NSArray *)images {
    
    PhotoMultModel *model = self.dataSource[currPaht.section];
    [model.photoDataSouc addObjectsFromArray:images];
    
    if (model.photoDataSouc.count>=model.photoNumber) {
        model.isaddPhoto = NO;
        NSRange range = NSMakeRange(model.photoNumber, model.photoDataSouc.count-model.photoNumber);
        [model.photoDataSouc removeObjectsInRange:range];
    }
    [self layoutViewFram];
    [self.collectionView reloadData];
    images = nil;
}
-(void)addFile
{
    SelectViewController *seVC = [[SelectViewController alloc] init];

    __weak __typeof(UICollectionView *)weakCollectionView = self.collectionView;
    WS(weakSelf);
    seVC.titleText = CustomLocalizedString(@"请选择文件", nil);
    NSFileManager * fm = [NSFileManager defaultManager];
    NSError *error;
    NSString *filePath = [LIBRARRY stringByAppendingPathComponent:@"Pfile"];
    seVC.dataSource = [fm contentsOfDirectoryAtPath:filePath error:&error];

    seVC.didselc = ^(NSInteger a,NSString *str){
        PhotoMultModel *model = _dataSource[currPaht.section];
        for (NSString *url in model.photoDataSouc) {
            if ([url isEqualToString:str]) {
                return;
            }
        }
        [model.photoDataSouc addObject:str];
        if (model.photoDataSouc.count>=model.photoNumber) {
            model.isaddPhoto = NO;
            NSRange range = NSMakeRange(model.photoNumber, model.photoDataSouc.count-model.photoNumber);
            [model.photoDataSouc removeObjectsInRange:range];
        }
        [weakSelf layoutViewFram];
        [weakCollectionView reloadSections:[NSIndexSet indexSetWithIndex:currPaht.section]];
    };
    
    [self.tabBarController addChildViewController:seVC];
    [self.view.window addSubview:seVC.view];
}
#pragma mark - ColletionViewDelegate
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return self.dataSource.count;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    PhotoMultModel *model = self.dataSource[section];
    return model.isaddPhoto?model.photoDataSouc.count+1:model.photoDataSouc.count;
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    PhotoMultModel *model = self.dataSource[indexPath.section];
    if (indexPath.section<self.dataSource.count-1) {
        PhotoCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"PhotoCollectionViewCell" forIndexPath:indexPath];
        if (!model.isaddPhoto||model.photoDataSouc.count!=indexPath.row) {
            if ([model.photoDataSouc[indexPath.row]  isKindOfClass:[UIImage class]]) {
                cell.photoImage.image = model.photoDataSouc[indexPath.row];
            }else{
                cell.photoImage.userInteractionEnabled = NO;
                NSString *url = [PHOTOLOADPATH stringByAppendingString:model.photoDataSouc[indexPath.row]];
                [cell.photoImage sd_setImageWithURL:[NSURL URLWithString:url] placeholderImage:[UIImage imageNamed:@"180x180"] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
//                    [model.photoDataSouc replaceObjectAtIndex:indexPath.row withObject:image];
                    cell.photoImage.userInteractionEnabled = YES;
                }];
            }
            
        }else{
            cell.photoImage.image = lastImage;
        }
        return cell;
    }else{
        
        FileCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"FileCollectionViewCell" forIndexPath:indexPath];
        
        if (!model.isaddPhoto||model.photoDataSouc.count!=indexPath.row) {
            cell.title.text = model.photoDataSouc[indexPath.row];
        }else{
            cell.title.text = CustomLocalizedString(@"选择文件", nil);
        }
        return cell;
    }
    
    
}
//定义每个UICollectionView 的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    return CGSizeMake((self.view.frame.size.width-40)/3-0.01, (self.view.frame.size.width-40)/3);
}
//定义每个UICollectionView 的 margin
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(10, 10, 10, 10);
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    currPaht = indexPath;
    PhotoMultModel *model = self.dataSource[indexPath.section];
    if (indexPath.section<self.dataSource.count-1) {
        if (model.isaddPhoto&&indexPath.row==model.photoDataSouc.count) {
            [self addPhoto];
        }else{
            UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:CustomLocalizedString(@"删除图片", nil) message:CustomLocalizedString(@"是否删除该图片", nil) delegate:self cancelButtonTitle:CustomLocalizedString(@"是", nil) otherButtonTitles:CustomLocalizedString(@"否", nil), nil];
            [alertView show];
        }
    }else{
        if (model.isaddPhoto&&indexPath.row==model.photoDataSouc.count) {
            [self addFile];
            
        }else{
            UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:CustomLocalizedString(@"删除文件", nil) message:CustomLocalizedString(@"是否删除该文件", nil) delegate:self cancelButtonTitle:CustomLocalizedString(@"是", nil) otherButtonTitles:CustomLocalizedString(@"否", nil), nil];
            [alertView show];
        }
    }
    
    
}
- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    PhotoMultModel *model = self.dataSource[indexPath.section];
    if (model.headTitle||model.footTitle) {
        UICollectionReusableView *reusableview = nil;
        PhonwRecoveryCollectionReusableView *view = [collectionView
                                                     dequeueReusableSupplementaryViewOfKind:kind
                                                     withReuseIdentifier:headReuseIdentifier
                                                     forIndexPath:indexPath];
        
        if (kind == UICollectionElementKindSectionHeader) {
            view.label.text = model.headTitle;
            view.label.font = UIFont15;
            view.label.textColor = [UIColor grayColor];
            reusableview = view;
        }else if(kind==UICollectionElementKindSectionFooter)
        {
            view.label.text = model.footTitle;
            view.label.font = UIFont15;
            view.label.textColor = [UIColor grayColor];
            reusableview = view;
        }
        return reusableview;
    }
    
    return nil;
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    if (buttonIndex==0) {
        PhotoMultModel *model = self.dataSource[currPaht.section];
        [model.photoDataSouc removeObjectAtIndex:currPaht.row];
        if (!model.isaddPhoto) {
            model.isaddPhoto = YES;
        }else{
            [self layoutViewFram];
        }
        [self.collectionView reloadData];
    }
}


- (void)layoutViewFram
{
    CGRect rect = self.view.frame;
    CGFloat collectionViewH = 0;
    for (PhotoMultModel *model in self.dataSource) {
        NSInteger photoNum = model.isaddPhoto?model.photoDataSouc.count+1:model.photoDataSouc.count;
        collectionViewH += ceil (photoNum/3.0) *(self.view.frame.size.width-40)/3+(ceil (photoNum/3.0)+1)*10;
        UICollectionViewFlowLayout *layout = (UICollectionViewFlowLayout *)self.collectionViewLayout;
        if (model.headTitle) {
            collectionViewH +=layout.headerReferenceSize.height;
        }
        if (model.footTitle) {
            collectionViewH +=layout.headerReferenceSize.height;
        }
    }
    
    if ([self.delegate respondsToSelector:@selector(collectionView:ChangeHeight:)]) {
        [self.delegate collectionView:self.view ChangeHeight:collectionViewH-rect.size.height];
    }
    rect.size.height = collectionViewH;
    self.view.frame = rect;
}


@end
