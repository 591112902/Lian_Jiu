//
//  CompanyViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/9/1.
//  Copyright (c) 2015年 CNMOBI. All rights reserved.
//

#import "CompanyViewController.h"
#import "GWLPhotoLibrayController.h"
#import "PhotoCollectionViewCell.h"
@interface CompanyViewController ()<UICollectionViewDataSource,UICollectionViewDelegate,UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property (strong, nonatomic) IBOutlet UICollectionView *collectionView;
@property (strong, nonatomic) IBOutlet NSLayoutConstraint *collectionViewH;
@property (strong, nonatomic) IBOutlet UITextField *CompanyName;
@property (strong, nonatomic) IBOutlet UITextField *location;
@property (strong, nonatomic) IBOutlet UITextField *phone;
@property (strong, nonatomic) IBOutlet UITextField *companNum;
@property (strong, nonatomic) IBOutlet UIScrollView *scrollView;

@end

@implementation CompanyViewController

{
    
    NSMutableArray *_photoDataSouc;
    UIButton *conmitBtn;
    BOOL isaddPhoto;
    UITextField *textfName;
    UITextField *textfNum;
    UITextField *textfPrice;
    UITextView *textvConten;
    UITextField *textfContactNUm;
    UITextField *textfLocation;
    UITextField *textfTradingStyle;
    UITextField *textfTimeLimit;
    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    
    isaddPhoto = YES;
    [self addFootView];
    UITapGestureRecognizer *tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(keyboardHide:)];
    //设置成NO表示当前控件响应后会传播到其他控件上，默认为YES。
    tapGestureRecognizer.cancelsTouchesInView = NO;
    //将触摸事件添加到当前view
    [self.view addGestureRecognizer:tapGestureRecognizer];
    
}
-(void)keyboardHide:(UITapGestureRecognizer*)tap{
    [self.view endEditing:YES];
}
- (BOOL)textFieldShouldReturn:(UITextField*)theTextField
{
    {
        [theTextField resignFirstResponder];
        
    }
    return YES;
}
- (void)textFieldDidBeginEditing:(UITextField *)textField
{
    //键盘遮挡
    CGPoint pt = [textField convertPoint:CGPointMake(0, textField.frame.size.height) toView:self.view];//把当前的textField的坐标映射到scrollview上
    CGFloat contenOffsetY = self.scrollView.contentOffset.y;
    HZLog(@"%f-----%f-----%f",BOUND_HIGHT,pt.y,contenOffsetY);
    if(BOUND_HIGHT-pt.y-64<252)//判断最上面不要去滚动
        dispatch_async(dispatch_get_main_queue(), ^{[self.scrollView setContentOffset:CGPointMake(0, contenOffsetY+(235-(BOUND_HIGHT-pt.y-64))) animated:YES];});
    
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.collectionViewH.constant = (self.view.bounds.size.width-40)/3+20;
}
-(void)addFootView
{
    _photoDataSouc = [[NSMutableArray alloc] initWithObjects:[UIImage imageNamed:@"phone_default"], nil];
    [self.collectionView registerNib:[UINib nibWithNibName:@"PhotoCollectionViewCell" bundle:nil] forCellWithReuseIdentifier:@"PhotoCollectionViewCell"];
    
}
- (void)addPhoto
{
    UIActionSheet *actionSheet = [[UIActionSheet alloc]
                                  initWithTitle:CustomLocalizedString(@"添加照片", nil)
                                  delegate:self
                                  cancelButtonTitle:CustomLocalizedString(@"取消", nil)
                                  destructiveButtonTitle:nil
                                  otherButtonTitles:CustomLocalizedString(@"从相册获取", nil), CustomLocalizedString(@"拍照", nil),nil];
    actionSheet.actionSheetStyle = UIActionSheetStyleDefault;
    [actionSheet showInView:self.view];
    
}
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 0) {
        [self addPhotoWithPhotoLibrary];
    }else if (buttonIndex == 1) {
        UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
        imagePicker.delegate = self;
        imagePicker.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        imagePicker.allowsEditing = YES;
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        [self presentViewController:imagePicker animated:YES completion:nil];
        imagePicker = nil;
    }
}
- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image= [info objectForKey:@"UIImagePickerControllerOriginalImage"];
    image = [image fixOrientation];
    [self displayImages:@[image]];
    image = nil;
}
- (void)addPhotoWithPhotoLibrary {
    __weak typeof (self)weakSelf = self;
    GWLPhotoLibrayController *photoSelector = [GWLPhotoLibrayController photoLibrayControllerWithBlock:^(NSArray *images) {
        [weakSelf displayImages:images];
    }];
    photoSelector.maxCount = 10;
    photoSelector.multiAlbumSelect = YES;
    [self presentViewController:photoSelector animated:YES completion:nil];
}

- (void)displayImages:(NSArray *)images {
    
    UIImage *imge = _photoDataSouc.lastObject;
    [_photoDataSouc removeLastObject];
    [_photoDataSouc addObjectsFromArray:images];
    [_photoDataSouc addObject:imge];
    
    if (_photoDataSouc.count>9) {
        isaddPhoto = NO;
        NSRange range = NSMakeRange(0, 9);
        NSArray *temp = [_photoDataSouc subarrayWithRange:range];
        _photoDataSouc = [NSMutableArray arrayWithArray:temp];
    }
    
    
    CGRect rect = _collectionView.frame;
    rect.size.height = ceil (_photoDataSouc.count/3.0) *(BOUND_WIDTH-40)/3+(ceil (_photoDataSouc.count/3.0)+1)*10;
    self.collectionViewH.constant = rect.size.height;
    [_collectionView reloadData];
}


-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    
    return _photoDataSouc.count;
    
}
-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    PhotoCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"PhotoCollectionViewCell" forIndexPath:indexPath];
    //    [cell.btn setImage:_dataSouc[indexPath.row] forState:UIControlStateNormal] ;
    cell.photoImage.image = _photoDataSouc[indexPath.row];
    cell.layer.borderColor=[UIColor darkGrayColor].CGColor;
    cell.layer.borderWidth=0.3;
    cell.layer.cornerRadius = 8;
    cell.layer.masksToBounds = YES;
    return cell;
}
//定义每个UICollectionView 的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    return CGSizeMake((BOUND_WIDTH-40)/3, (BOUND_WIDTH-40)/3);
}
//定义每个UICollectionView 的 margin
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    
    //    NSInteger w = (NSInteger)BOUND_WIDTH;
    //    NSInteger num = w/100;
    //    HZLog(@"%f",(BOUND_WIDTH-100*num)/(num+1));
    return UIEdgeInsetsMake(10, 10, 10, 10);
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (isaddPhoto&&indexPath.row==_photoDataSouc.count-1) {
        [self addPhoto];
    }else{
        
    }
}

- (void)AddPhoto
{
    
}
- (void)ToCommit
{
    HZLog(@"%@",textfName.text);
}

@end
