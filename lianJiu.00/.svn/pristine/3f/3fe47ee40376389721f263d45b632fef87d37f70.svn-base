//
//  Au_CompanyTableViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/3.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//

#import "Au_CompanyTableViewController.h"
#import "Au_companyFootView.h"
#import "TextFileTableViewCell.h"
#import "Au_companyModel.h"
#import "UIImageView+WebCache.h"
#import "validate.h"
@interface Au_CompanyTableViewController ()<UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextFieldDelegate>
@property (nonatomic,strong)NSMutableArray *dataScour;
@property (nonatomic,strong)Au_companyModel *conpanyModel;
@end

@implementation Au_CompanyTableViewController
{
    UIButton *currPhotoBtn;
    Au_companyFootView *footView;
    NSMutableArray *ischoosePhotoList;
    BOOL ischoosePhoto1;
    BOOL ischoosePhoto2;
    BOOL ischoosePhoto3;
    BOOL ischoosePhoto4;
    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    [self adjustmentTableView];
    [self addDataScour];
    self.tableView.tableHeaderView = [self addHeadView];
    [self addFootView];
    UITapGestureRecognizer *tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(keyboardHide:)];
    tapGestureRecognizer.cancelsTouchesInView = NO;
    [self.view addGestureRecognizer:tapGestureRecognizer];
    ischoosePhotoList = [[NSMutableArray alloc] init];
    [ischoosePhotoList addObject:@0];
    [ischoosePhotoList addObject:@0];
    [ischoosePhotoList addObject:@0];
    [ischoosePhotoList addObject:@0];
    
    
}
- (UIView *)addHeadView
{
    UIView *headView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, 44)];
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(15, 0, BOUND_WIDTH-15, 44)];
    label.text = CustomLocalizedString(@"填写资料进行实名认证", nil);
    [headView  addSubview:label];
    return headView;
}
-(void)keyboardHide:(UITapGestureRecognizer*)tap{
    [self.view endEditing:YES];
}
-(Au_companyModel *)conpanyModel
{
    if (!_conpanyModel) {
        _conpanyModel = [[Au_companyModel alloc] init];
    }
    return _conpanyModel;
}
-(AccountModel *)userModel
{
    if (!_userModel) {
        _userModel=[NSKeyedUnarchiver unarchiveObjectWithFile:ACCOUNTPATH];
    }
    return _userModel;
}
-(void)addDataScour
{
    
//    NSArray *arr1 = @[@"注册号:",@"企业名称:",@"法人代表:",@"负责人:",@"负责人身份证号:",@"所在城市:"];
    NSArray *arr1 = @[CustomLocalizedString(@"注册号:", nil),CustomLocalizedString(@"企业名称:", nil),CustomLocalizedString(@"法人代表:", nil),CustomLocalizedString(@"负责人:", nil),CustomLocalizedString(@"负责人身份证号:", nil),CustomLocalizedString(@"所在城市:", nil)];
    self.dataScour = [[NSMutableArray alloc] initWithArray:arr1];
    
    [networking AFNPOSTNotCode:QUERYQYSMRZ withparameters:@{@"vip":self.userModel.vip} success:^(NSMutableDictionary *dic) {
        NSDictionary *response = dic[@"response"];
     
        
        if (response.count>0) {
            self.conpanyModel = [Au_companyModel ModelWith:response];
            [self.tableView reloadData];
            
            if (_conpanyModel.license.length>0) {
                [footView.topPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:[PHOTOLOADPATH stringByAppendingString:_conpanyModel.license?_conpanyModel.license:@""]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.topPhotoBtn.selected = YES;
                        [footView.topPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.topPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                }];
            }
            if (_conpanyModel.enrol.length>0) {
                [footView.leftPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:[PHOTOLOADPATH stringByAppendingString:_conpanyModel.enrol?_conpanyModel.enrol:@""]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.leftPhotoBtn.selected = YES;
                        [footView.leftPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.leftPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                }];
            }
            if (_conpanyModel.zzjgdmz.length>0) {
                [footView.midPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:[PHOTOLOADPATH stringByAppendingString:_conpanyModel.zzjgdmz?_conpanyModel.zzjgdmz:@""]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.midPhotoBtn.selected = YES;
                        [footView.midPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.midPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                }];
            }
            if (_conpanyModel.xkz.length>0) {
                [footView.rightPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:[PHOTOLOADPATH stringByAppendingString:_conpanyModel.xkz?_conpanyModel.xkz:@""]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.rightPhotoBtn.selected = YES;
                        [footView.rightPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.rightPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                }];
            }
        }else
        {
            [footView.leftPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            [footView.rightPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            [footView.midPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            [footView.topPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            footView.topPhotoBtn.userInteractionEnabled = YES;
            footView.midPhotoBtn.userInteractionEnabled = YES;
            footView.leftPhotoBtn.userInteractionEnabled = YES;
            footView.rightPhotoBtn.userInteractionEnabled = YES;
            footView.commitBTn.userInteractionEnabled = YES;
            footView.commitBTn.hidden = NO;
        }

        
    } error:nil HUDAddView:self.tableView];
}
- (void)adjustmentTableView
{
    self.tableView.separatorStyle = UITableViewCellSelectionStyleNone;
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.backgroundColor = BGColor;
    [self.tableView registerNib:[UINib nibWithNibName:@"TextFileTableViewCell" bundle:nil] forCellReuseIdentifier:@"TextFileTableViewCell"];
    
}
-(void)addFootView
{
    NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"Au_companyFootView" owner:nil options:nil];
    footView =views.firstObject;
    footView.frame  = CGRectMake(0, 0, BOUND_WIDTH, 500);
    
    [footView.topPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.midPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.leftPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.rightPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.commitBTn addTarget:self action:@selector(ToCommit) forControlEvents:UIControlEventTouchUpInside];
    self.tableView.tableFooterView = footView;
}

- (void)addPhoto:(UIButton *)btn
{
    currPhotoBtn = btn;
    UIActionSheet *actionSheet = [[UIActionSheet alloc]
                                  initWithTitle:CustomLocalizedString(@"添加照片", nil)
                                  delegate:self
                                  cancelButtonTitle:CustomLocalizedString(@"取消", nil)
                                  destructiveButtonTitle:nil
                                  otherButtonTitles:CustomLocalizedString(@"从相册获取", nil), CustomLocalizedString(@"拍照", nil),nil];
    actionSheet.actionSheetStyle = UIActionSheetStyleDefault;
    [actionSheet showInView:self.view];
    
}

-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
    imagePicker.delegate = self;
    
    imagePicker.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
    imagePicker.allowsEditing = YES;
    
    
    if (buttonIndex == 0) {
        imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        [self presentViewController:imagePicker animated:YES completion:nil];
    }else if (buttonIndex == 1) {
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        [self presentViewController:imagePicker animated:YES completion:nil];
    }
    imagePicker = nil;
    
    
}

- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image= [info objectForKey:@"UIImagePickerControllerOriginalImage"];
    image = [image fixOrientation];
    //    image = [image fixOrientation];
    //
    //    [self saveImage:image WithName:@"beizhu"];
    //    image = nil;
    //    NSArray* paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    //    NSString* documentsDirectory = [paths objectAtIndex:0];
    //    NSString* fullPathToFile = [documentsDirectory stringByAppendingPathComponent:@"beizhu"];
    //    UIImage *savedImage = [[UIImage alloc] initWithContentsOfFile:fullPathToFile];
    
    [currPhotoBtn setImage:image forState:UIControlStateSelected];
    currPhotoBtn.selected = YES;
    if (currPhotoBtn == footView.topPhotoBtn) {
        [ischoosePhotoList replaceObjectAtIndex:0 withObject:@1];
    }else if(currPhotoBtn == footView.leftPhotoBtn) {
        [ischoosePhotoList replaceObjectAtIndex:1 withObject:@1];
    }else if(currPhotoBtn == footView.midPhotoBtn) {
        [ischoosePhotoList replaceObjectAtIndex:2 withObject:@1];
    }else if(currPhotoBtn == footView.rightPhotoBtn) {
        [ischoosePhotoList replaceObjectAtIndex:3 withObject:@1];
    }


    image = nil;
}

- (void)ToCommit
{
    if ([validate CheckInputAccount:CustomLocalizedString(@"注册号", nil) withText:self.conpanyModel.registrid withminNum:1 withMaxNum:25]&&
        [validate CheckInputAccount:CustomLocalizedString(@"企业名称", nil) withText:self.conpanyModel.company withminNum:1 withMaxNum:60]&&
        [validate CheckInputAccount:CustomLocalizedString(@"法人代表", nil) withText:self.conpanyModel.fdb withminNum:1 withMaxNum:20]&&
        [validate CheckInputAccount:CustomLocalizedString(@"负责人", nil) withText:self.conpanyModel.principal withminNum:1 withMaxNum:20]&&
        [validate CheckInputIdentityCard:self.conpanyModel.principal_id]&&
        [validate CheckInputAccount:CustomLocalizedString(@"所在城市", nil) withText:self.conpanyModel.address withminNum:1 withMaxNum:20]) {
        
        if (!footView.topPhotoBtn.selected) {
            [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请上传营业执照图片", nil) toView:self.view];
            return;
        }
        NSMutableArray *photos = [[NSMutableArray alloc] init];
        for (int i = 0; i<ischoosePhotoList.count; i++) {
            NSNumber *nub = ischoosePhotoList[i];
            if ([nub isEqualToNumber:@1]) {
                switch (i) {
                    case 0:
                        [photos addObject:[footView.topPhotoBtn imageForState:UIControlStateSelected]];
                        break;
                    case 1:
                        [photos addObject:[footView.leftPhotoBtn imageForState:UIControlStateSelected]];
                        break;
                    case 2:
                        [photos addObject:[footView.midPhotoBtn imageForState:UIControlStateSelected]];
                        break;
                    case 3:
                        [photos addObject:[footView.rightPhotoBtn imageForState:UIControlStateSelected]];
                        break;
                    default:
                        break;
                }
            }
            
        }
        NSDictionary *para = @{@"vip":self.userModel.vip,@"registrid":self.conpanyModel.registrid,@"company":self.conpanyModel.company,@"fdb":self.conpanyModel.fdb,@"principal":self.conpanyModel.principal,@"principal_id":self.conpanyModel.principal_id,@"address":self.conpanyModel.address};
        NSMutableDictionary *parameters = [NSMutableDictionary dictionaryWithDictionary:para];
        
        if (photos.count>0) {
            
            NSArray *dataArr= [self photoDataSoucToData:photos];
            [networking AFNPOSTMutableArrfile:LOADFILE withparameters:nil dataName:@"file" dataSource:dataArr success:^(NSMutableDictionary *dic) {
                NSArray *photos =[dic[@"response"] componentsSeparatedByCharactersInSet:[NSCharacterSet characterSetWithCharactersInString:@";,"]];
                for (NSString *str in photos) {
                    for (int i = 0; i<ischoosePhotoList.count; i++) {
                        NSNumber *nub = ischoosePhotoList[i];
                        if ([nub isEqualToNumber:@1]) {
                            [ischoosePhotoList replaceObjectAtIndex:i withObject:@0];
                            switch (i) {
                                case 0:
                                    self.conpanyModel.license = str;
                                    [parameters setObject:str forKey:@"license"];
                                    break;
                                case 1:
                                    self.conpanyModel.enrol = str;
                                    [parameters setObject:str forKey:@"enrol"];
                                    break;
                                case 2:
                                    self.conpanyModel.zzjgdmz = str;
                                    [parameters setObject:str forKey:@"zzjgdmz"];
                                    break;
                                case 3:
                                    self.conpanyModel.xkz = str;
                                    [parameters setObject:str forKey:@"xkz"];
                                    break;
                                default:
                                    break;
                            }
                            break;
                        }
                    }
                }
                [self updataUserdetail:parameters];
            } error:nil HUDAddView:self.tableView];
        }else{
            [self updataUserdetail:parameters];
        }

    }
}
- (void)updataUserdetail:(NSDictionary *)parameters
{
    
    [networking AFNPOST:SMRZQY withparameters:parameters success:^(NSMutableDictionary *dic) {
        HZLog(@"%@---%@",dic[@"message"],dic);
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"修改成功", nil) toView:self.tableView];
        footView.commitBTn.userInteractionEnabled = NO;
        footView.commitBTn.alpha = 0.4;
    } error:nil HUDAddView:self.view];
}
//压缩图片
- (NSArray *)photoDataSoucToData:(NSArray*) arr
{
    NSMutableArray *dataArr= [[NSMutableArray alloc] init];
    
    for (int i = 0; i<arr.count;i++) {
        UIImage *image =arr[i];
       NSData *data = [image imageCompress];
        [dataArr addObject:data];
    }
    return dataArr;
}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return  self.dataScour.count;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    TextFileTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"TextFileTableViewCell"];
    cell.title.text = _dataScour[indexPath.row];
    cell.valueTF.delegate =self;
    cell.valueTF.tag = 4500+indexPath.row;
    switch (indexPath.row) {
        case 0:
            cell.valueTF.text = self.conpanyModel.registrid;
            cell.valueTF.keyboardType = UIKeyboardTypeNamePhonePad;
            break;
        case 1:
            cell.valueTF.text = self.conpanyModel.company;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        case 2:
            cell.valueTF.text = self.conpanyModel.fdb;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        case 3:
            cell.valueTF.text = self.conpanyModel.principal;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        case 4:
            cell.valueTF.text = self.conpanyModel.principal_id;
            cell.valueTF.keyboardType = UIKeyboardTypeNamePhonePad;
            break;
        case 5:
            cell.valueTF.text = self.conpanyModel.address;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        default:
            break;
    }

    cell.valueTF.placeholder = CustomLocalizedString(@"必填", nil);
    return cell;
}

#pragma mark - uitextFileDelegate
-(void)textFieldDidEndEditing:(UITextField *)textField
{
    [textField setText:[textField.text filterEmoji]];
    NSInteger index = textField.tag-4500;
    switch (index) {
        case 0:
            self.conpanyModel.registrid = textField.text;
            break;
        case 1:
            self.conpanyModel.company = textField.text;
            break;
        case 2:
            self.conpanyModel.fdb  = textField.text;;
            break;
        case 3:
            self.conpanyModel.principal  = textField.text;;
            break;
        case 4:
            self.conpanyModel.principal_id  = textField.text;;
            break;
        case 5:
            self.conpanyModel.address  = textField.text;;
            break;
        default:
            break;
    }
}
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@" "]&&textField.text.length<1) {
        return NO;
    }
    if ([string isEqualToString:@"\n"]){
        return YES;
    }
    NSInteger index = textField.tag-4500;
    NSString * aString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    if (index==0)
    {
        if ([aString length] > 25) {
            textField.text = [aString substringToIndex:25];
            return NO;
        }
    }else if(index==1){
        if ([aString length] > 60) {
            textField.text = [aString substringToIndex:60];
            return NO;
        }
    }else if(index==2||index==3){
        if ([aString length] > 20) {
            textField.text = [aString substringToIndex:20];
            return NO;
        }
    }else if(index==4){
        if ([aString length] > 18) {
            textField.text = [aString substringToIndex:18];
            return NO;
        }
    }else if(index==5){
        if ([aString length] > 20) {
            textField.text = [aString substringToIndex:20];
            return NO;
        }
    }
    return YES;
}
-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    
    UITextField *tf = [self.tableView viewWithTag:textField.tag+1];
    if (tf) {
        [tf becomeFirstResponder];
    }else{
        [textField resignFirstResponder];
    }
    return YES;
}
@end
