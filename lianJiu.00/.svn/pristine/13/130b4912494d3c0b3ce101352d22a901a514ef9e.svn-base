//
//  becomeBusinessViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/9/21.
//  Copyright (c) 2015年 CNMOBI. All rights reserved.
//

#import "becomeBusinessViewController.h"
#import "BecomeBTableViewCell.h"
#import "B_B_succseViewController.h"
#import "DictionnaryModel.h"
#import "validate.h"
@interface becomeBusinessViewController ()

@end

@implementation becomeBusinessViewController

{
    NSString *identifier;
    
}
- (void)adjustmentTableView
{
    identifier = @"BecomeBTableViewCell";
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, 40)];
    label.text = CustomLocalizedString(@"申请加入指定回收商", nil);
    label.textColor = [UIColor lightGrayColor];
    label.textAlignment = NSTextAlignmentCenter;
    self.tableView.tableHeaderView = label;
    self.tableView.separatorStyle = UITableViewCellSelectionStyleNone;
    self.tableView.showsVerticalScrollIndicator = NO;
        self.tableView.backgroundColor = BGColor;
    [self.tableView registerNib:[UINib nibWithNibName:identifier bundle:nil] forCellReuseIdentifier:identifier];
    
    
    
}

-(void)addDataScour
{
    
    NSArray *arr = @[CustomLocalizedString(@"姓名:", nil),CustomLocalizedString(@"身份证号:",nil),CustomLocalizedString(@"收废点/公司名:",nil),CustomLocalizedString(@"联系电话:",nil),CustomLocalizedString(@"收废点详细地址:",nil)];
    NSMutableArray *arr1 = [[NSMutableArray alloc] init];
    for (int i=0;i<arr.count;i++) {
        NSString *str = arr[i];
        DictionnaryModel *model = [DictionnaryModel ModelWithDictionnary:@{str:@""}];
        switch (i) {
            case 0:
                model.maxLength = 20;
                model.check =^(NSString *name,NSString *text){
                    return[validate CheckInputAccount:name withText:text withminNum:1 withMaxNum:20];
                };
                break;
            case 1:
                model.maxLength = 18;
                model.keyboardType = UIKeyboardTypeNamePhonePad;
                model.check =^(NSString *name,NSString *text){
                    return [validate CheckInputIdentityCard:text];
                };
                break;
            case 2:
                model.maxLength = 60;
                model.check =^(NSString *name,NSString *text){
                    return[validate CheckInputAccount:name withText:text withminNum:1 withMaxNum:60];
                };
                break;
            case 3:
                model.maxLength = 11;
                model.keyboardType = UIKeyboardTypeNumberPad;
                model.check =^(NSString *name,NSString *text){
                    return [validate CheckInputPhone:name withText:text];
                };
                break;
            default:
                model.maxLength = 100;
                model.check =^(NSString *name,NSString *text){
                    return[validate CheckInputAccount:name withText:text withminNum:1 withMaxNum:100];
                };
                break;
        }
    
        [arr1 addObject:model];
    }
    self.dataScour = [[NSMutableArray alloc] initWithObjects:arr1, nil];
}
-(void)addFootView
{

    self.footView = [[UIView alloc] init];
    
    CGFloat H = 20;
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(10, H, BOUND_WIDTH-20, 20)];
    label.text = CustomLocalizedString(@"上传本人与收废点照片", nil);
    label.textColor = [UIColor lightGrayColor];
    [self.footView addSubview:label];
    H+=20;
    [self addPhotoViiew:H];
}
-(void)addPhotoViiew:(CGFloat)H
{
    self.footView.frame = CGRectMake(0, 0, BOUND_WIDTH, H+(BOUND_WIDTH-40)/3+20+10+44+20);
    UICollectionViewFlowLayout *flowLayout=[[UICollectionViewFlowLayout alloc ]init];
    self.photoCollec = [[PhotoCollectionViewController alloc] initWithCollectionViewLayout:flowLayout];
    self.photoCollec.photoNumber = 2;
    self.photoCollec.delegate = self;
    self.photoCollec.view.frame = CGRectMake(0, H, self.view.frame.size.width, (self.view.frame.size.width-40)/3+20);
    [self addChildViewController:self.photoCollec];
    [self.footView addSubview:self.photoCollec.view];
    [self.photoCollec didMoveToParentViewController:self];
    H +=(BOUND_WIDTH-40)/3+20+10;
    
    self.conmitBtn = [[UIButton alloc] initWithFrame:CGRectMake(10, H, BOUND_WIDTH-20, 44)];
    [self.conmitBtn setBackgroundImage:[UIImage imageNamed:@"fr_three_img_but"] forState:UIControlStateNormal];
    [self.conmitBtn addTarget:self action:@selector(ToCommit) forControlEvents:UIControlEventTouchUpInside];
    //    [self.conmitBtn setImage:[UIImage imageNamed:@"fr_three_img_but"] forState:UIControlStateNormal];
    NSUserDefaults *def = [NSUserDefaults standardUserDefaults];
    if ([[def objectForKey:@"huishoushang"] isEqualToNumber:@1]) {
        [self.conmitBtn setTitle:CustomLocalizedString(@"审核中", nil) forState:UIControlStateNormal];
        self.conmitBtn.alpha = 0.4;
        self.conmitBtn.userInteractionEnabled = NO;
    }else{
        [self.conmitBtn setTitle:CustomLocalizedString(@"提交", nil) forState:UIControlStateNormal];
    }
    
    H += 44+20;
    self.footView.frame = CGRectMake(0, 0, BOUND_WIDTH, H);
    self.tableView.tableFooterView =self.footView;
    [self.footView addSubview:self.conmitBtn];
    [self.tableView reloadData];
}
- (void)ToCommit
{
    NSUserDefaults *def = [NSUserDefaults standardUserDefaults];
    BOOL islogin = [def boolForKey:@"islogin"];
    if (islogin) {
        NSArray *arr = self.dataScour.firstObject;
        for (DictionnaryModel *model in arr) {
           NSString *name = [model.title substringToIndex:model.title.length-1];
            __weak NSString *value = model.value;
            if (!model.check(name,value)) {
                return;
            }
        }
        if (self.photoCollec.photoDataSouc.count<2) {
            [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"上传本人与收废点照片", nil) toView:self.view];
            return;
        }
        DictionnaryModel *model1 = arr[0];
        DictionnaryModel *model2 = arr[1];
        DictionnaryModel *model3 = arr[2];
        DictionnaryModel *model4 = arr[3];
        DictionnaryModel *model5 = arr[4];
        NSArray *dataArr= [self photoDataSoucToData];
        [networking AFNPOSTMutableArrfile:LOADFILE withparameters:nil dataName:@"file" dataSource:dataArr success:^(NSMutableDictionary *dic) {
            
            NSString *vip = [def objectForKey:@"vip"];
            NSDictionary *parameters = @{@"vip":vip,@"name":model1.value,@"idcard":model2.value,@"nickname":model3.value,@"tel":model4.value,@"address":model5.value,@"photo":dic[@"response"]?dic[@"response"]:@""};
            [networking AFNPOST:APPLYRECYCLE withparameters:parameters success:^(NSMutableDictionary *dic) {
                HZLog(@"%@---%@",dic[@"message"],dic);
                self.conmitBtn.userInteractionEnabled = NO;
                self.conmitBtn.alpha = 0.4;
                B_B_succseViewController *BBSVC = [[B_B_succseViewController alloc] init];
                BBSVC.title = self.title;
                BBSVC.titleText = CustomLocalizedString(@"申请加入指定小型回收商", nil);
                BBSVC.contenText = CustomLocalizedString(@"你已申请加入指定小型回收商，我们会尽快审核，3个工作日内确认是否成功加入。", nil);
                [self.navigationController pushViewController:BBSVC animated:YES];
            } error:nil HUDAddView:self.view];
            
        } error:nil HUDAddView:self.view];
    }else{
            [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请先登录", nil) toView:self.view];
        }
}

#pragma mark - Table view data source


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0;
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSArray *arr = self.dataScour[indexPath.section];
    DictionnaryModel *modle = arr[indexPath.row];
    BecomeBTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    cell.valueTF.delegate = self;
    cell.title.text = modle.title;
    cell.valueTF.tag = 300+indexPath.row;
    cell.valueTF.text = modle.value;
    cell.valueTF.keyboardType = modle.keyboardType;
    return cell;
}
#pragma mark - uitextFileDelegate
-(void)textFieldDidEndEditing:(UITextField *)textField
{
    [textField setText:[textField.text filterEmoji]];
    NSInteger index = textField.tag-300;
    NSArray *arr = self.dataScour.firstObject;
    DictionnaryModel *modle = arr[index];
    modle.value = textField.text;
}

-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@" "]&&textField.text.length<1) {
        return NO;
    }
    if ([string isEqualToString:@"\n"]){
        return YES;
    }
    NSInteger index = textField.tag-300;
    NSArray *arr = self.dataScour[0];
    DictionnaryModel *modle = arr[index];
    
    NSString * aString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    if ([aString length] > modle.maxLength) {
        textField.text = [aString substringToIndex:modle.maxLength];
        return NO;
    }
    return YES;

}
@end
