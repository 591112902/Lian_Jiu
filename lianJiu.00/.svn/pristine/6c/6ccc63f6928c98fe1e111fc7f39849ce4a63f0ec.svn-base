//
//  M_CollectionViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/24.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//

#import "M_CollectionViewController.h"
#import "MainTableViewCell.h"
#import "SATableViewCell.h"
#import "B_C_TViewController.h"
#import "B_C_GViewController.h"

@interface M_CollectionViewController ()<UITableViewDataSource,UITableViewDelegate>

@end

@implementation M_CollectionViewController
{

    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.TenderVo = [[NSMutableArray alloc] init];
    self.PurchaseVo = [[NSMutableArray alloc] init];
    self.SupplyVo = [[NSMutableArray alloc] init];
    _dataSouc = self.TenderVo;
    [self  requestData];
    
    CGFloat segementedH = 44;
    NSArray *arr = @[CustomLocalizedString(@"招标", nil),CustomLocalizedString(@"供应",nil),CustomLocalizedString(@"采购",nil)];
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 64, BOUND_WIDTH, segementedH)];
    view.backgroundColor = [UIColor whiteColor];
    for (int i = 0; i<arr.count; i++) {
        UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(i*BOUND_WIDTH/arr.count, 0, BOUND_WIDTH/arr.count, segementedH)];
        [btn addTarget:self action:@selector(chooseClass:) forControlEvents:UIControlEventTouchUpInside];
        btn.titleLabel.textAlignment = NSTextAlignmentCenter;
        [btn setTitle:arr[i] forState:UIControlStateNormal];
        [btn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [btn setTitleColor:MAINColor forState:UIControlStateSelected];
        [btn setTitle:arr[i] forState:UIControlStateSelected];
        btn.tag = 400+i;//靠tag区分是哪个数据源
        [view addSubview:btn];
        if (i==0) {
            btn.selected =YES;
            self.currBtn = btn;
        }
        if (i!=arr.count-1) {
            UIView *gapView = [[UIView alloc] initWithFrame:CGRectMake((i+1)*BOUND_WIDTH/arr.count, 8, 1, segementedH-8*2)];
            gapView.backgroundColor = [UIColor lightGrayColor];
            [view addSubview:gapView];
        }
    }
    UIView *gapView = [[UIView alloc] initWithFrame:CGRectMake(0, segementedH-1, BOUND_WIDTH, 1)];
    gapView.backgroundColor = [UIColor lightGrayColor];
    [view addSubview:gapView];
    [self.view addSubview:view];
    
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, segementedH+64, BOUND_WIDTH, BOUND_HIGHT-segementedH-64)];
    self.tableView.delegate =self;
    self.tableView.dataSource =self;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.tableView registerNib:[UINib nibWithNibName:@"MainTableViewCell" bundle:nil] forCellReuseIdentifier:@"MainTableViewCell"];
    [self.tableView registerNib:[UINib nibWithNibName:@"SATableViewCell" bundle:nil] forCellReuseIdentifier:@"SATableViewCell"];
    self.tableView.backgroundColor = BGColor;
    [self.view addSubview:self.tableView];
    
}
//申请数据
-(void)requestData
{
    
    [networking AFNPOSTNotHUD:QUERYSHOUCANG withparameters:@{@"vip":self.userModel.vip} success:^(NSMutableDictionary *dic) {
        NSDictionary *response = dic[@"response"];
        if ([response[@"TenderVo"] isKindOfClass:[NSArray class]]) {
            NSArray *arr = response[@"TenderVo"];
            for (NSDictionary *temp in arr) {
                if ([temp isKindOfClass:[NSDictionary class]]) {
                    bidModel *model = [bidModel ModelWith:temp];
                    [self.TenderVo addObject:model];
                }
            }
        }
        if ([response[@"SupplyVo"] isKindOfClass:[NSArray class]]) {
            NSArray *arr = response[@"SupplyVo"];
            for (NSDictionary *temp in arr) {
                if ([temp isKindOfClass:[NSDictionary class]]) {
                    SupplyModel *model = [SupplyModel ModelWith:temp];
                    [self.SupplyVo addObject:model];
                }
            }
        }
        if ([response[@"PurchaseVo"] isKindOfClass:[NSArray class]]) {
            NSArray *arr = response[@"PurchaseVo"];
            for (NSDictionary *temp in arr) {
                if ([temp isKindOfClass:[NSDictionary class]]) {
                    PurchaseModel *model = [PurchaseModel ModelWith:temp];
                    [self.PurchaseVo addObject:model];
                }
            }
        }
        [self.tableView reloadData];
    } error:nil];
    
}
- (void)chooseClass:(UIButton *)btn
{
    if (self.currBtn==btn) {
        return;
    }
    self.currBtn = btn;
    for (UIView *view in btn.superview.subviews) {
        if ([view isKindOfClass:[UIButton class]]) {
            UIButton *button = (UIButton *)view;
            button.selected = NO;
        }
    }
    btn.selected = YES;
    if (btn.tag==400) {
        _dataSouc = self.TenderVo;
    }else if(btn.tag==401){
        _dataSouc = self.SupplyVo;
    }else{
        _dataSouc = self.PurchaseVo;
    }
    [self.tableView reloadData];
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _dataSouc.count*2;
}
-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row%2==0) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"default"];
        if (!cell) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"default"];
            cell.contentView.backgroundColor = BGColor;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
        }
        return cell;
    }else {
        if (self.currBtn.tag==400) {
            MainTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MainTableViewCell"];
            [cell fillCellWithModel:_dataSouc[indexPath.row/2]];
            return cell;
        }else if(self.currBtn.tag==401){
             SATableViewCell*cell = [tableView dequeueReusableCellWithIdentifier:@"SATableViewCell"];
            [cell fillCellWithModel:_dataSouc[indexPath.row/2]];
            return cell;
        }else{
            SATableViewCell*cell = [tableView dequeueReusableCellWithIdentifier:@"SATableViewCell"];
            [cell fillCellWithModel2:_dataSouc[indexPath.row/2]];
            return cell;
        }
    }
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row%2==0) {
        return 8;
    }else {
        return 100;
    }
    
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (self.currBtn.tag==400) {
        B_C_TViewController *bidContenVC = [[B_C_TViewController alloc] init];
        bidContenVC.model = _dataSouc[indexPath.row/2];
        [self.navigationController pushViewController:bidContenVC animated:YES];
    }else if(self.currBtn.tag==401){
        B_C_GViewController *bidContenVC = [[B_C_GViewController alloc] init];
        bidContenVC.model = _dataSouc[indexPath.row/2];
        [self.navigationController pushViewController:bidContenVC animated:YES];
    }else{
        B_C_GViewController *bidContenVC = [[B_C_GViewController alloc] init];
        bidContenVC.Purmodel = _dataSouc[indexPath.row/2];
        [self.navigationController pushViewController:bidContenVC animated:YES];
    }
    
}
//是否可以出现删除
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row%2!=0) {
        return UITableViewCellEditingStyleDelete;
    }
    return UITableViewCellEditingStyleNone;
}
- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return CustomLocalizedString(@"删除", nil);
}

//删除
- (void)tableView:(UITableView *)tableView
commitEditingStyle:(UITableViewCellEditingStyle)editingStyle
forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row%2!=0) {
        //判断当前的编辑模式是+还是-
        
        switch (editingStyle) {
            case UITableViewCellEditingStyleDelete:
                [self deleteShouCang:indexPath];
                break;
                
            default:
                break;
        }
    }
}
//收藏、取消收藏
-(void)deleteShouCang:(NSIndexPath*)indexPath
{
    NSString *sid;
    if (self.currBtn.tag==400) {
        bidModel *model = _dataSouc[indexPath.row/2];
        sid = model.t_id;
    }else if(self.currBtn.tag==401){
        SupplyModel *model = _dataSouc[indexPath.row/2];
        sid = model.s_id;
    }else{
        PurchaseModel *model = _dataSouc[indexPath.row/2];
        sid = model.pur_id;
    }
 
    [networking AFNPOST:DELETESHOUCANG withparameters:@{@"vip":self.userModel.vip,@"sid":sid} success:^(NSMutableDictionary *dic) {
        //1.先将数组的内容删除
        [_dataSouc removeObjectAtIndex:indexPath.row/2];
        //2.再处理tableview上的删除
        //将要删除的indexPath组合成一个数组交给tableview
        NSIndexPath *indexPath2 = [NSIndexPath indexPathForRow:indexPath.row-1 inSection:indexPath.section];
        [self.tableView deleteRowsAtIndexPaths:@[indexPath,indexPath2] withRowAnimation:UITableViewRowAnimationAutomatic];
    } error:nil HUDAddView:self.view];
}
-(void)dealloc
{
    NSString *class = NSStringFromClass([self class]);
    if ([class isEqualToString:@"M_CollectionViewController"]) {
        NSInteger count= 0;
        count += self.TenderVo.count;
        count += self.SupplyVo.count;
        count += self.PurchaseVo.count;
        self.preVC.souCang = [NSNumber numberWithInteger:count];
    }
    
}
@end
