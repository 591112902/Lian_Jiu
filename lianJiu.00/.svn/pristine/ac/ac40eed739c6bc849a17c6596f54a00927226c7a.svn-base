//
//  Au_PersonTableViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/3.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//

#import "Au_PersonTableViewController.h"
#import "AuthenticateFootView.h"
#import "TextFileTableViewCell.h"
#import "UIImageView+WebCache.h"
#import "Au_personModel.h"
#import "validate.h"
@class AuthenticateViewController;

@interface Au_PersonTableViewController ()<UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate,UITextFieldDelegate>
@property (nonatomic,strong)NSMutableArray *dataScour;
@property (nonatomic,strong)Au_personModel *personModel;
@end

@implementation Au_PersonTableViewController
{
    UIButton *currPhotoBtn;
    AuthenticateFootView *footView;
    BOOL isUpdaPhoto;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self adjustmentTableView];
    [self addDataScour];
    self.tableView.tableHeaderView = [self addHeadView];
    [self addFootView];
    UITapGestureRecognizer *tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(keyboardHide:)];
    tapGestureRecognizer.cancelsTouchesInView = NO;
    [self.view addGestureRecognizer:tapGestureRecognizer];
}
- (UIView *)addHeadView
{
    UIView *headView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, 44)];
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(15, 0, BOUND_WIDTH-15, 44)];
    label.text = CustomLocalizedString(@"填写资料进行实名认证", nil);
    [headView  addSubview:label];
    return headView;
}
-(void)keyboardHide:(UITapGestureRecognizer*)tap{
    [self.view endEditing:YES];
}
-(Au_personModel *)personModel
{
    if (!_personModel) {
        _personModel = [[Au_personModel alloc] init];
    }
    return _personModel;
}

-(void)addDataScour
{
    
    NSArray *arr1 = @[CustomLocalizedString(@"真实姓名:", nil),CustomLocalizedString(@"身份证号:", nil),CustomLocalizedString(@"手机号码:", nil)];
    self.dataScour = [[NSMutableArray alloc] initWithArray:arr1];

    [networking AFNPOSTNotCode:QUERYGRSMRZ withparameters:@{@"vip":self.userModel.vip} success:^(NSMutableDictionary *dic) {
        
        
        HZLog(@"%@",dic);
        if ([dic[@"code"] isEqualToNumber:@0]) {
            NSDictionary *response = dic[@"response"];
            
            self.personModel = [Au_personModel ModelWith:response];
            [self.tableView reloadData];
            
            if (_personModel.photo1) {
                [footView.leftPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:_personModel.photo1] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.leftPhotoBtn.selected = YES;
                        [footView.leftPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.leftPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                    
                }];
            }
            if (_personModel.photo2) {
                [footView.rightPhotoBtn.imageView sd_setImageWithURL:[NSURL URLWithString:_personModel.photo2] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    if (image) {
                        footView.rightPhotoBtn.selected = YES;
                        [footView.rightPhotoBtn setImage:image forState:UIControlStateSelected];
                    }else{
                        [footView.rightPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
                    }
                    
                }];
            }
        }else if([dic[@"code"] isEqualToNumber:@1003])
        {
            [footView.leftPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            [footView.rightPhotoBtn setImage:[UIImage imageNamed:@"phone_default"] forState:UIControlStateNormal];
            footView.leftPhotoBtn.userInteractionEnabled = YES;
            footView.rightPhotoBtn.userInteractionEnabled = YES;
            footView.commitBTn.userInteractionEnabled = YES;
            footView.commitBTn.hidden = NO;
        }
    } error:nil HUDAddView:self.tableView];
    
    
}
- (void)adjustmentTableView
{
    self.tableView.separatorStyle = UITableViewCellSelectionStyleNone;
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.backgroundColor = BGColor;
    [self.tableView registerNib:[UINib nibWithNibName:@"TextFileTableViewCell" bundle:nil] forCellReuseIdentifier:@"TextFileTableViewCell"];
    
}
-(void)addFootView
{
     NSArray *views = [[NSBundle mainBundle] loadNibNamed:@"AuthenticateFootView" owner:nil options:nil];
    footView =views.firstObject;
    footView.frame  = CGRectMake(0, 0, BOUND_WIDTH, 300);
    
    [footView.leftPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.rightPhotoBtn addTarget:self action:@selector(addPhoto:) forControlEvents:UIControlEventTouchUpInside];
    [footView.commitBTn addTarget:self action:@selector(ToCommit) forControlEvents:UIControlEventTouchUpInside];
    self.tableView.tableFooterView = footView;
}

- (void)addPhoto:(UIButton *)btn
{
    currPhotoBtn = btn;
    UIActionSheet *actionSheet = [[UIActionSheet alloc]
                                  initWithTitle:CustomLocalizedString(@"添加照片", nil)
                                  delegate:self
                                  cancelButtonTitle:CustomLocalizedString(@"取消", nil)
                                  destructiveButtonTitle:nil
                                  otherButtonTitles:CustomLocalizedString(@"从相册获取", nil), CustomLocalizedString(@"拍照", nil),nil];
    actionSheet.actionSheetStyle = UIActionSheetStyleDefault;
    [actionSheet showInView:self.view];
    
}

-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
    imagePicker.delegate = self;
    
    imagePicker.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
    imagePicker.allowsEditing = YES;
    
    
    if (buttonIndex == 0) {
        imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        [self presentViewController:imagePicker animated:YES completion:nil];
    }else if (buttonIndex == 1) {
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        [self presentViewController:imagePicker animated:YES completion:nil];
    }
    imagePicker = nil;
    
    
}

- (void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image= [info objectForKey:@"UIImagePickerControllerOriginalImage"];
    image = [image fixOrientation];
//    image = [image fixOrientation];
    //
    //    [self saveImage:image WithName:@"beizhu"];
    //    image = nil;
    //    NSArray* paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    //    NSString* documentsDirectory = [paths objectAtIndex:0];
    //    NSString* fullPathToFile = [documentsDirectory stringByAppendingPathComponent:@"beizhu"];
    //    UIImage *savedImage = [[UIImage alloc] initWithContentsOfFile:fullPathToFile];
    
    [currPhotoBtn setImage:image forState:UIControlStateSelected];
    currPhotoBtn.selected = YES;
    isUpdaPhoto = YES;
    image = nil;
}

- (void)ToCommit
{
    if ([validate CheckInputAccount:CustomLocalizedString(@"真实姓名", nil) withText:self.personModel.name withminNum:1 withMaxNum:20]&&
        [validate CheckInputIdentityCard:self.personModel.idcardno]&&
        [validate CheckInputPhone:CustomLocalizedString(@"手机号码", nil) withText:self.personModel.phone]) {
        if (!footView.leftPhotoBtn.selected||!footView.rightPhotoBtn.selected) {
            [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请选择上传图片", nil) toView:self.view];
            return;
        }
        if (isUpdaPhoto) {
            UIImage *image1 = [footView.leftPhotoBtn imageForState:UIControlStateSelected];
            UIImage *image2 = [footView.rightPhotoBtn imageForState:UIControlStateSelected];
            NSArray *photos = @[image1,image2];
            NSArray *dataArr= [self photoDataSoucToData:photos];
            [networking AFNPOSTMutableArrfile:LOADFILE withparameters:nil dataName:@"file" dataSource:dataArr success:^(NSMutableDictionary *dic) {
                self.personModel.photo = dic[@"response"];
                [self updataUserdetail];
            } error:nil HUDAddView:self.tableView];
        }else{
            [self updataUserdetail];
        }

    }
    }

- (void)updataUserdetail
{
    NSDictionary *parameters = @{@"vip":self.userModel.vip,@"name":self.personModel.name,@"idcardno":self.personModel.idcardno,@"phone":self.personModel.phone,@"photo":self.personModel.photo};
    HZLog(@"%@",parameters);
    [networking AFNPOST:GRSMRZ withparameters:parameters success:^(NSMutableDictionary *dic) {
        HZLog(@"%@---%@",dic[@"message"],dic);
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"修改成功", nil) toView:self.tableView];
        footView.commitBTn.userInteractionEnabled = NO;
        footView.commitBTn.alpha = 0.4;
        NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
        [defaults setObject:parameters[@"name"] forKey:@"name"];
        [defaults setObject:parameters[@"phone"] forKey:@"phone"];
    } error:nil HUDAddView:self.view];
}
//压缩图片
- (NSArray *)photoDataSoucToData:(NSArray*) arr
{
    NSMutableArray *dataArr= [[NSMutableArray alloc] init];
    
    for (int i = 0; i<arr.count;i++) {
        UIImage *image =arr[i];
        NSData *data = [image imageCompress];
        [dataArr addObject:data];
    }
    return dataArr;
}
#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    return  self.dataScour.count;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    TextFileTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"TextFileTableViewCell"];
    cell.title.text = _dataScour[indexPath.row];
    cell.valueTF.delegate =self;
    cell.valueTF.tag = 4000+indexPath.row;
    switch (indexPath.row) {
        case 0:
            cell.valueTF.text = self.personModel.name;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        case 1:
            cell.valueTF.text = self.personModel.idcardno;
            cell.valueTF.keyboardType = UIKeyboardTypeDefault;
            break;
        case 2:
            cell.valueTF.text = self.personModel.phone;
            cell.valueTF.keyboardType = UIKeyboardTypeNumberPad;
            break;
            
        default:
            break;
    }
    cell.valueTF.placeholder = CustomLocalizedString(@"必填", nil);
    return cell;
}

#pragma mark - uitextFileDelegate
-(void)textFieldDidEndEditing:(UITextField *)textField
{
    [textField setText:[textField.text filterEmoji]];
    NSInteger index = textField.tag-4000;
    switch (index) {
        case 0:
            self.personModel.name = textField.text;
            break;
        case 1:
            self.personModel.idcardno = textField.text;
            break;
        case 2:
            self.personModel.phone = textField.text;
            break;
            
        default:
            break;
    }
}
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@" "]&&textField.text.length<1) {
        return NO;
    }
    if ([string isEqualToString:@"\n"]){
        return YES;
    }
    NSInteger index = textField.tag-4000;
    NSString * aString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    if (index==0)
    {
        if ([aString length] > 15) {
            textField.text = [aString substringToIndex:15];
            return NO;
        }
    }else if(index==1){
        if ([aString length] > 18) {
            textField.text = [aString substringToIndex:18];
            return NO;
        }
    }else if(index==2){
        if ([aString length] > 11) {
            textField.text = [aString substringToIndex:11];
            return NO;
        }
    }
    return YES;
}
-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    
    UITextField *tf = [self.tableView viewWithTag:textField.tag+1];
    if (tf) {
        [tf becomeFirstResponder];
    }else{
        [textField resignFirstResponder];
    }
    return YES;
}
-(void)dealloc
{
    HZLog(@"%@----dealloc",self.class);
    //    UIViewController *viewController = self.childViewControllers.lastObject;
    //    [viewController.view removeFromSuperview];
    //    [viewController removeFromParentViewController];
}
@end
