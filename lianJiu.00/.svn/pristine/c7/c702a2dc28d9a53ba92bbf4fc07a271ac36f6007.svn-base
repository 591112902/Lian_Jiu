//
//  B_C_TViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/9/14.
//  Copyright (c) 2015年 CNMOBI. All rights reserved.
//

#import "B_C_TViewController.h"
#import "UIImageView+WebCache.h"

#import "AccountModel.h"

#import "B_C_BibViewController.h"
#import "BondViewController.h"

#import "BanceDetailModel.h"
#import "networking.h"
@interface B_C_TViewController ()<UIScrollViewDelegate,UIAlertViewDelegate>

@end

@implementation B_C_TViewController
{
    UIScrollView *_scrollV;
    CGFloat _scrollVH;
    BOOL subViewIsHide;//底部按钮view是否隐藏
    UIButton *NRightBtn;//收藏
    UIView *flowView;//投标流程view
    UIButton *flowBtn;//投标流程按钮

    UILabel *dLabel;//天
    UILabel *hLabel;//时
    UILabel *mLabel;//分
    UILabel *sLabel;//秒
    NSTimer *time;//定时器
    
    NSMutableArray *headPhotosUrl;
    NSArray *contenlist;
    NSArray *contenDataSource;
    NSMutableArray *subPhotosUrl;
    

    NSString *vip;

}


- (void)viewDidLoad {
    [super viewDidLoad];
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] init];
    backItem.title = CustomLocalizedString(@"返回", nil);
    self.navigationItem.backBarButtonItem = backItem;
    
  
    [self addDataSource];

//    [self queryReadName];

    _scrollVH = 0;
    self.view .backgroundColor = [UIColor whiteColor];
    _scrollV = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, BOUND_HIGHT)];
    _scrollV.showsVerticalScrollIndicator = NO;
    _scrollV.backgroundColor = BGColor;
    [self.view addSubview:_scrollV];
    
    //头部scrollView--------------------------------------------------------------
    CGFloat headImageH = BOUND_WIDTH*0.7;
    UIScrollView *headSCView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, _scrollVH, BOUND_WIDTH, headImageH)];
    headSCView.delegate = self;
    headSCView.tag = 199999;
    for (int i = 0; i<headPhotosUrl.count; i++) {
        UIImageView *headImag = [[UIImageView alloc] initWithFrame:CGRectMake(i*(BOUND_WIDTH), 0, BOUND_WIDTH, headImageH)];
        NSString *urlStr = [PHOTOLOADPATH stringByAppendingString:headPhotosUrl[i]?headPhotosUrl[i]:@""];
        urlStr =[urlStr stringByAddingPercentEscapesUsingEncoding: NSUTF8StringEncoding];
        [headImag sd_setImageWithURL:[NSURL URLWithString:urlStr] placeholderImage:[UIImage imageNamed:@"180x180"]];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(clickHeadImage:)];
        [headImag addGestureRecognizer:tap];
        headImag.userInteractionEnabled = YES;
        [headSCView addSubview:headImag];
        headImag = nil;
    }
    headSCView.showsHorizontalScrollIndicator = NO;
    headSCView.pagingEnabled = YES;
    headSCView.contentSize = CGSizeMake(headPhotosUrl.count*(BOUND_WIDTH), headImageH);
    [_scrollV addSubview:headSCView];
    headSCView = nil;
    
    CGFloat pageItemW = 15;
    UIPageControl *page = [[UIPageControl alloc] initWithFrame:CGRectMake((BOUND_WIDTH-pageItemW*headPhotosUrl.count)/2, headImageH-25, pageItemW*headPhotosUrl.count, 10)];
    page.tag = 44;
    page.numberOfPages = headPhotosUrl.count;
    page.currentPageIndicatorTintColor = MAINColor;
    [_scrollV addSubview:page];
    page = nil;
    _scrollVH+=headImageH;
    
    //内容--------------------------------------------------------------
    UIView *contenV = [[UIView alloc] init];
    contenV.backgroundColor = [UIColor whiteColor];
    CGFloat contenH = 0;
    
    NSString *str = self.model.t_title;
    CGRect headlabelSize = [str boundingRectWithSize:CGSizeMake(BOUND_WIDTH-20, 30000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont boldSystemFontOfSize:17]} context:nil];
    CGFloat headLabelH = headlabelSize.size.height+20;
    UILabel *headLabel = [[UILabel alloc] initWithFrame:CGRectMake(10, contenH, BOUND_WIDTH-20, headLabelH)];
    headLabel.text = str;
    headLabel.font = [UIFont boldSystemFontOfSize:17];
    headLabel.numberOfLines = 0;
    [contenV addSubview:headLabel];
    contenH +=headLabelH;
    
    CGFloat lablH = 25;
    CGFloat gapW = 10;
    CGFloat RgapW = 10;
    CGFloat LLabelW = 100;
    CGFloat RlabelW = BOUND_WIDTH-LLabelW-gapW-RgapW-20;
    
//    NSLog(@"cotenlist %@",contenlist);
    for (int i =0; i<contenlist.count; i++) {
        UILabel *bidId = [[UILabel alloc] initWithFrame:CGRectMake(gapW, contenH, LLabelW, lablH)];
        bidId.text =contenlist[i];
//        bidId.textAlignment=NSTextAlignmentLeft;
        UILabel *bidIdValue = [[UILabel alloc] initWithFrame:CGRectMake(gapW+LLabelW+RgapW, contenH, RlabelW, lablH)];
        bidIdValue.text =contenDataSource[i];
        bidId.font = UIFont15;
        bidIdValue.font = UIFont15;
        [contenV addSubview:bidId];
        [contenV addSubview:bidIdValue];
        bidId.textAlignment = NSTextAlignmentRight;
        bidId = nil;
        bidIdValue = nil;
        contenH +=lablH;
    }
    contenH +=5;
    
    UILabel *PromptLL = [[UILabel alloc] initWithFrame:CGRectMake(7, contenH, 60, 20)];
    PromptLL.text = CustomLocalizedString(@"提示:", nil);
    PromptLL.textColor = [UIColor redColor];
    UILabel *PromptLabel = [[UILabel alloc] initWithFrame:CGRectMake(15+40+RgapW, contenH, BOUND_WIDTH-(15+40+RgapW)-15, 50)];
    PromptLabel.numberOfLines = 0;
    PromptLabel.font = UIFont13;
    PromptLL.font = UIFont13;
    NSMutableString *promtlText = [NSMutableString stringWithString:CustomLocalizedString(@"投标方在投标成功后100天内必须在货物所在地进行交易验货，如不能满足改要求，请谨慎投标。", nil)];
   NSRange range =[promtlText rangeOfString:@"100"];
    [promtlText replaceCharactersInRange:range withString:self.model.t_picktime];
//    NSString *promtlText = [NSString stringWithFormat:@"投标方在投标成功后%@天内必须在货物所在地进行交易验货，如不能满足改要求，请谨慎投标。", self.model.t_picktime];
    if (isIOS7) {
        STRINGNONIL(self.model.t_picktime);
        NSMutableAttributedString *noteStr = [[NSMutableAttributedString alloc] initWithString:promtlText];
        NSRange redRange = NSMakeRange([[noteStr string] rangeOfString:self.model.t_picktime].location, [[noteStr string] rangeOfString:self.model.t_picktime].length);
        [noteStr addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:redRange];
        [PromptLabel setAttributedText:noteStr];
        [PromptLabel sizeToFit];
    }else{
        PromptLabel.text = promtlText;
    }

    [contenV addSubview:PromptLL];
    [contenV addSubview:PromptLabel];
    contenH +=50;

    
    //内容---时间--------------------------------------------------------------
//
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    STRINGNONIL(self.model.t_date);
    NSInteger valueDate = [self.model.t_date integerValue];
    valueDate = valueDate *24*60*60;
    NSDate *passTime = [dateFormatter dateFromString:self.model.pass_time];
    passTime = [passTime initWithTimeInterval:valueDate sinceDate:passTime];
    NSTimeInterval timetamp = [passTime timeIntervalSinceNow];
    int days = timetamp/3600/24;
    int hours = (int)timetamp%(3600*24)/3600;
    int minute = (int)timetamp%(3600*24)%3600/60;
    int second = (int)timetamp%(3600*24)%3600%60;
    
    endTimeView = [[UIView alloc] initWithFrame:CGRectMake(gapW, contenH+12, BOUND_WIDTH-20, 64)];
    endTimeView.layer.borderWidth = 1;
    endTimeView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    
    UILabel *timeTitle = [[UILabel alloc] initWithFrame:CGRectMake(gapW, 7, BOUND_WIDTH-20, 20)];
    timeTitle.font = UIFont13;
    timeTitle.text = CustomLocalizedString(@"距离投标结束还有:", nil);
    [endTimeView addSubview:timeTitle];
    
    if ((![self.model.pass_time isEqualToString:@""]&&timetamp<0)||[self.model.t_bidstate_id isEqualToString:@"4"]) {
        UILabel *expired = [[UILabel alloc] initWithFrame:CGRectMake(0, 7+20, BOUND_WIDTH-20, 77-20-15)];
        expired.font = UIFont17;
        expired.textAlignment = NSTextAlignmentCenter;
        expired.textColor = [UIColor redColor];
        expired.text = CustomLocalizedString(@"已结束", nil);//@"已结束";
        [endTimeView addSubview:expired];
        subViewIsHide = YES;
    }else{
        NSString *daysText = nil;
        NSString *hoursText = nil;
        NSString *minuteText = nil;
        NSString *secondText = nil;
        
        if (timetamp>0) {
            daysText = [NSString stringWithFormat:@"%d",days];
            hoursText = [NSString stringWithFormat:@"%d",hours];
            minuteText = [NSString stringWithFormat:@"%d",minute];
            secondText = [NSString stringWithFormat:@"%d",second];
        }
        
        CGFloat imageLGap = 60;
        CGFloat imageW = 26;
        CGFloat redLableW = 25;
        CGFloat blacLableW = 30;
        imageLGap = (BOUND_WIDTH-imageLGap-20-imageW-(redLableW+blacLableW)*3)/2;
        UIImageView *timeImage = [[UIImageView alloc] initWithFrame:CGRectMake(imageLGap, 20+14, imageW, imageW)];
        timeImage.image = [UIImage imageNamed:@"naozhong"];
        [endTimeView addSubview:timeImage];
        
        dLabel = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW, 20+17, redLableW, 20)];
        dLabel.text = daysText;
        dLabel.textAlignment = NSTextAlignmentCenter;
        dLabel.font = [UIFont systemFontOfSize:20];
        dLabel.textColor = [UIColor redColor];
        [endTimeView addSubview:dLabel];
        UILabel *dLabel2 = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+redLableW, 20+17, blacLableW, 20)];
        dLabel2.text = CustomLocalizedString(@"天", nil);//@"天";
        dLabel2.font = [UIFont systemFontOfSize:13];
        [endTimeView addSubview:dLabel2];
        hLabel = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+redLableW+blacLableW, 20+17, redLableW, 20)];
        hLabel.text = hoursText;
        hLabel.textAlignment = NSTextAlignmentCenter;
        hLabel.font = [UIFont systemFontOfSize:20];
        hLabel.textColor = [UIColor redColor];
        UILabel *hLabel2 = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+redLableW*2+blacLableW, 20+17, blacLableW, 20)];
        hLabel2.text = CustomLocalizedString(@"时", nil);//@"时";
        hLabel2.font = [UIFont systemFontOfSize:13];
        [endTimeView addSubview:hLabel];
        [endTimeView addSubview:hLabel2];
        mLabel = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+(redLableW+blacLableW)*2, 20+17, redLableW, 20)];
        mLabel.text = minuteText;
        mLabel.textAlignment = NSTextAlignmentCenter;
        mLabel.font = [UIFont systemFontOfSize:20];
        mLabel.textColor = [UIColor redColor];
        UILabel *mLabel2 = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+(redLableW+blacLableW)*2+redLableW, 20+17, blacLableW, 20)];
        mLabel2.text = CustomLocalizedString(@"分", nil);//@"分";
        mLabel2.font = [UIFont systemFontOfSize:13];
        [endTimeView addSubview:mLabel];
        [endTimeView addSubview:mLabel2];
        
        sLabel = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+(redLableW+blacLableW)*3, 20+17, redLableW, 20)];
        sLabel.text = secondText;
        sLabel.textAlignment = NSTextAlignmentCenter;
        sLabel.font = [UIFont systemFontOfSize:20];
        sLabel.textColor = [UIColor redColor];
        UILabel *sLabel2 = [[UILabel alloc] initWithFrame:CGRectMake(imageLGap+20+imageW+(redLableW+blacLableW)*3+redLableW, 20+17, blacLableW, 20)];
        sLabel2.text = CustomLocalizedString(@"秒", nil);//@"秒";
        sLabel2.font = [UIFont systemFontOfSize:13];
        [endTimeView addSubview:sLabel];
        [endTimeView addSubview:sLabel2];
        
        time = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(timeFireMethod) userInfo:nil repeats:YES];
        [[NSRunLoop currentRunLoop] addTimer:time forMode:NSRunLoopCommonModes];
    }
    
    [contenV addSubview:endTimeView];
    contenH += 77+5;

    
    UIImageView *gapimge = [[UIImageView alloc] initWithFrame:CGRectMake(0, contenH, BOUND_WIDTH, 1)];
    gapimge.backgroundColor = [UIColor lightGrayColor];
    [contenV addSubview:gapimge];
    
    UILabel *touwenLL = [[UILabel alloc] initWithFrame:CGRectMake(0, contenH+1, BOUND_WIDTH, 30)];
    touwenLL.text = CustomLocalizedString(@"图文详情", nil);//@"图文详情";
    touwenLL.textAlignment = NSTextAlignmentCenter;
    contenH+=30;
    [contenV addSubview:touwenLL];
    
    
    contenV.frame = CGRectMake(0, _scrollVH, BOUND_WIDTH, contenH);
    [_scrollV addSubview:contenV];
    _scrollVH += contenH+10;
    
//    尾部图文详情--------------------------------------------------------------
    UIView *tuwenXQView = [[UIView alloc] init];
    tuwenXQView.backgroundColor = [UIColor whiteColor];
    CGFloat tuwenXQViewH = 0;
    NSString *substr = self.model.t_detail;
    CGRect subheadlabelSize = [substr boundingRectWithSize:CGSizeMake(BOUND_WIDTH-20, 30000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:13]} context:nil];
    CGFloat subheadLabelH = subheadlabelSize.size.height+20;
    UILabel *subheadLabel = [[UILabel alloc] initWithFrame:CGRectMake(10, tuwenXQViewH, BOUND_WIDTH-20, subheadLabelH)];
    subheadLabel.text = substr;
    subheadLabel.font = UIFont13;
    subheadLabel.numberOfLines = 0;
    [tuwenXQView addSubview:subheadLabel];
    tuwenXQViewH +=subheadLabelH;
    
    
    UIImage *subimgae = [UIImage imageNamed:@"180x180"];
    CGFloat subImageH = subimgae.size.height*(BOUND_WIDTH/subimgae.size.width);
    CGFloat subImgesY = subheadLabelH;
    for (int i=0; i<subPhotosUrl.count; i++) {

        UIImageView *subImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, subImgesY, BOUND_WIDTH, subImageH)];
        [tuwenXQView addSubview:subImage];
        NSString *urlStr = [PHOTOLOADPATH stringByAppendingString:subPhotosUrl[i]?subPhotosUrl[i]:@""];
        urlStr =[urlStr stringByAddingPercentEscapesUsingEncoding: NSUTF8StringEncoding];
        
        WS(weakSelf);
        [subImage sd_setImageWithURL:[NSURL URLWithString:urlStr] placeholderImage:subimgae completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
            if (!error) {
                CGFloat imageH = image.size.height;
                CGFloat imageW = image.size.width;
                CGFloat newSubImageH = imageH/imageW*BOUND_WIDTH;
                if (cacheType==SDImageCacheTypeMemory) {
                    CGRect oldRect = subImage.frame;
                    oldRect.size.height = newSubImageH;
                    
                    subImage.frame = oldRect;
                } else if (cacheType==SDImageCacheTypeDisk||cacheType==SDImageCacheTypeNone) {
                    
                    CGFloat gapH = newSubImageH - subImageH;
                    [weakSelf subImageView:subImage ChangeHeight:gapH];
                }
            }
        }];
        //        subImage.contentMode =UIViewContentModeScaleAspectFit;
        subImage.userInteractionEnabled = YES;
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(clickHeadImage:)];
        [subImage addGestureRecognizer:tap];
        subImgesY+=subImage.frame.size.height;
        tuwenXQViewH +=subImage.frame.size.height;
        subImage = nil;
    }
    
    tuwenXQView.frame = CGRectMake(0, _scrollVH, BOUND_WIDTH, tuwenXQViewH);
    [_scrollV addSubview:tuwenXQView];
    _scrollVH += tuwenXQViewH+10;
    
    //底部按钮--------------------------------------------------------------'
    AccountModel *userModel=[NSKeyedUnarchiver unarchiveObjectWithFile:ACCOUNTPATH];
    if (userModel && [userModel.vip isEqualToString:self.model.usr_id]) {
        subViewIsHide = YES;
    }
    if (!subViewIsHide) {
        UIView *subView = [[UIView alloc] init];
        subView.backgroundColor = [UIColor whiteColor];
        subView.layer.borderWidth = 1;
        subView.layer.borderColor = [UIColor lightGrayColor].CGColor;
        CGFloat subViewH = 50;
        CGFloat subBtnW = BOUND_WIDTH/3;
        flowBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        flowBtn.frame = CGRectMake(0, 0, subBtnW, subViewH);
        [flowBtn setTitle:CustomLocalizedString(@"投标流程", nil) forState: UIControlStateNormal];
        [flowBtn setTitle:CustomLocalizedString(@"投标流程", nil) forState: UIControlStateSelected];
        [flowBtn addTarget:self action:@selector(flow:) forControlEvents:UIControlEventTouchUpInside];
        [flowBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [subView addSubview:flowBtn];
        
        UIButton *bondBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        bondBtn.frame = CGRectMake(subBtnW, 0, subBtnW, subViewH);
        [bondBtn setTitle:CustomLocalizedString(@"提交保证金", nil) forState: UIControlStateNormal];
        [bondBtn setBackgroundColor:[UIColor colorWithRed:255/255.0 green:147/255.0 blue:40/255.0 alpha:1]];
        [bondBtn addTarget:self action:@selector(bond) forControlEvents:UIControlEventTouchUpInside];
        [subView addSubview:bondBtn];
        
        UIButton *bidBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        bidBtn.frame = CGRectMake(subBtnW*2, 0, subBtnW, subViewH);
        [bidBtn setTitle:CustomLocalizedString(@"我要出价", nil) forState: UIControlStateNormal];
        [bidBtn setBackgroundColor:[UIColor redColor]];
        [bidBtn addTarget:self action:@selector(bid) forControlEvents:UIControlEventTouchUpInside];
        [subView addSubview:bidBtn];
        
        subView.frame = CGRectMake(0, BOUND_HIGHT-subViewH, BOUND_WIDTH, subViewH);
        
        
        [self.view addSubview:subView];
        _scrollVH += subViewH;
    }
    
    
    _scrollV.contentSize = CGSizeMake(BOUND_WIDTH, _scrollVH);
    
    CGFloat NbtnW = 50;
    UIButton *NleftBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    NleftBtn.frame = CGRectMake(5, 25, NbtnW, NbtnW);
    NleftBtn.imageEdgeInsets = UIEdgeInsetsMake(5,5,5,5);
    [NleftBtn setImage:[UIImage imageNamed:@"contenNlbtn"] forState:UIControlStateNormal];
    [NleftBtn addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:NleftBtn];
    
    NRightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    NRightBtn.frame = CGRectMake(BOUND_WIDTH-5-NbtnW, 25, NbtnW, NbtnW);
    NRightBtn.imageEdgeInsets = UIEdgeInsetsMake(5,5,5,5);
    [NRightBtn setImage:[UIImage imageNamed:@"contenNrbtn"] forState:UIControlStateNormal];
    [NRightBtn setImage:[UIImage imageNamed:@"contenNrbtn_sel"] forState:UIControlStateSelected];
    [NRightBtn addTarget:self action:@selector(shoucangBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:NRightBtn];
    
    
    // Do any additional setup after loading the view from its nib.
}


- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
   
    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleDefault;
    self.navigationController.navigationBarHidden = YES;
}
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;
    self.navigationController.navigationBarHidden = NO;
}
-(void)dealloc
{
    if (_islogin) {
        STRINGNONIL(self.model.t_id);
   
        [networking AFNPOSTNotHUD:RECORDTRACK withparameters:@{@"vId":vip,@"sId":self.model.t_id,@"type":@"TB"} success:^(NSMutableDictionary *dic) {
            HZLog(@"%@",dic);
        } error:nil];
    }
}

#pragma mark - UI
//时间倒计
- (void)timeFireMethod
{
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    STRINGNONIL(self.model.t_date);
    NSInteger valueDate = [self.model.t_date integerValue];
    valueDate = valueDate *24*60*60;
    NSDate *passTime = [dateFormatter dateFromString:self.model.pass_time];
    passTime = [passTime initWithTimeInterval:valueDate sinceDate:passTime];
    NSTimeInterval timetamp = [passTime timeIntervalSinceNow];
    int days = timetamp/3600/24;
    int hours = (int)timetamp%(3600*24)/3600;
    int minute = (int)timetamp%(3600*24)%3600/60;
    int second = (int)timetamp%(3600*24)%3600%60;
    
    if (timetamp<0) {
        for (UIView *view in endTimeView.subviews) {
            [view removeFromSuperview];
        }
        UILabel *expired = [[UILabel alloc] initWithFrame:CGRectMake(0, 7+20, BOUND_WIDTH-20, 77-20-15)];
        expired.font = UIFont17;
        expired.textAlignment = NSTextAlignmentCenter;
        expired.textColor = [UIColor redColor];
        expired.text = CustomLocalizedString(@"已结束", nil);//@"已结束";
        [endTimeView addSubview:expired];
        subViewIsHide = YES;
        [time invalidate];
        time = nil;
    }else{
        NSString *daysText = nil;
        NSString *hoursText = nil;
        NSString *minuteText = nil;
        NSString *secondText = nil;
        
        daysText = [NSString stringWithFormat:@"%d",days];
        hoursText = [NSString stringWithFormat:@"%d",hours];
        minuteText = [NSString stringWithFormat:@"%d",minute];
        secondText = [NSString stringWithFormat:@"%d",second];
        dLabel.text = daysText;
        hLabel.text = hoursText;
        mLabel.text = minuteText;
        sLabel.text = secondText;
    }
}
- (void)SetLabelAttributes:(UILabel*)label
{
    label.textAlignment = NSTextAlignmentCenter;
    label.font = UIFont15;
}
#pragma mark - data
-(void)addDataSource
{
    NSUserDefaults *def = [NSUserDefaults standardUserDefaults];
    _islogin = [def boolForKey:@"islogin"];
    vip = [def objectForKey:@"vip"];
    [self queryShoucang];
    [self queryBaoZhengJin];

 
    NSArray *headurl = [self.model.p_file componentsSeparatedByCharactersInSet:[NSCharacterSet characterSetWithCharactersInString:@",;"]];
     headPhotosUrl=[[NSMutableArray alloc] initWithArray:headurl];
    [headPhotosUrl removeObject:@""];
    

    contenlist = @[CustomLocalizedString(@"投标编号:", nil),CustomLocalizedString(@"货物数量:", nil),CustomLocalizedString(@"所在地区:", nil),CustomLocalizedString(@"交易币种:", nil),CustomLocalizedString(@"招标类型:", nil),CustomLocalizedString(@"货物类型:", nil),CustomLocalizedString(@"货物包装:",nil),CustomLocalizedString(@"交易方式:",nil)];
    
    STRINGNONIL(self.model.dw_name);
    STRINGNONIL(self.model.t_quality);
    NSString *address;
    if ([self.model.a_level isEqualToString:@"2"]) {
        address = [NSString stringWithFormat:@"%@(%@)",CustomLocalizedString(@"中国", nil),self.model.dz_name];
    }else{
        address = self.model.dz_name;
    }
    contenDataSource = @[self.model.t_id,[self.model.t_quality stringByAppendingString:self.model.dw_name?self.model.dw_name:@""],address,self.model.bz_name,self.model.t_tendertype,self.model.t_type,self.model.pack_name,self.model.jy_name];
    
   

    NSArray *subUrl=[self.model.p_detail componentsSeparatedByCharactersInSet:[NSCharacterSet characterSetWithCharactersInString:@",;"]];
    subPhotosUrl =[[NSMutableArray alloc] initWithArray:subUrl];
    [subPhotosUrl removeObject:@""];
    
    NSMutableArray *harr = [[NSMutableArray alloc] initWithArray:headPhotosUrl];
    [harr removeObject:@""];
    headPhotosUrl = harr;
    
    NSMutableArray *arr = [[NSMutableArray alloc] initWithArray:subPhotosUrl];
    [arr removeObject:@""];
    subPhotosUrl = arr;
}
//查询是否收藏
-(void)queryShoucang
{
    if (_islogin) {
        
        [networking AFNPOSTNotHUD:QUERYSHOUCANG withparameters:@{@"vip":vip} success:^(NSMutableDictionary *dic) {
            if (dic) {
                NSDictionary *response = dic[@"response"];
                if ([response[@"TenderVo"] isKindOfClass:[NSArray class]]) {
                    NSArray *TenderVo = response[@"TenderVo"];
                    if (TenderVo.count>0) {
                        for (NSDictionary *temp in TenderVo) {
                            if ([temp isKindOfClass:[NSDictionary class]]) {
                                if ([self.model.t_id isEqualToString:temp[@"t_id"]]) {
                                    NRightBtn.selected = YES;
                                    return;
                                }
                            }
                        }
                        
                    }
                }
            }
          
        } error:nil];
        
    }
}

//

//查询是否提交过保证金
-(void)queryBaoZhengJin
{
    if (_islogin) {
        HZLog(@"%@---%@",vip,self.model.t_id);
        [networking AFNPOSTNotHUD:QUERYTENDERMIDDLE withparameters:@{@"vip":vip,@"bid":self.model.t_id} success:^(NSMutableDictionary *dic) {
            if ([dic[@"response"] isKindOfClass:[NSDictionary class]]) {
                NSDictionary *response = dic[@"response"];
                if (response.count>0) {
                    _isDidBond = YES;
                }
                
            }
        } error:nil];
        
    }
}


//#warning 查询是否已经实名认证 






#pragma mark - Action
//收藏、取消收藏
-(void)shoucangBtnClick:(UIButton*)btn
{
    if (_islogin) {
        if (btn.selected) {
            [networking AFNPOST:DELETESHOUCANG withparameters:@{@"vip":vip,@"sid":self.model.t_id} success:^(NSMutableDictionary *dic) {
                NRightBtn.selected = NO;
                [MBProgressHUD showSuccess:CustomLocalizedString(@"取消收藏成功", nil) toView:self.view];
            } error:nil HUDAddView:self.view];
        }else{
            [networking AFNPOST:ADDSHOUCANG withparameters:@{@"vip":vip,@"id":self.model.t_id,@"type":@"TB"} success:^(NSMutableDictionary *dic) {
                NRightBtn.selected = YES;
                [MBProgressHUD showSuccess:CustomLocalizedString(@"收藏成功", nil) toView:self.view];
            } error:nil HUDAddView:self.view];
        }
    }
    
}

-(void)back
{
    [time invalidate];
    time= nil;
    if (self.isSuccessBond) {
        UIAlertView *alerView =[[UIAlertView alloc] initWithTitle:CustomLocalizedString(@"提示:", nil) message:CustomLocalizedString(@"您已提交保证金，暂未出价，是否继续退出？", nil) delegate:self cancelButtonTitle:CustomLocalizedString(@"是", nil) otherButtonTitles:CustomLocalizedString(@"否", nil), nil];
        [alerView show];
    }else{
        [self.navigationController popViewControllerAnimated:YES];
    }
    
    
}
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex==0) {
        [self.navigationController popViewControllerAnimated:YES];
    }
}
//交易流程
- (void)flow:(UIButton *)flowbtn
{
    if (flowbtn.selected) {
        [self closeflowview:flowbtn];
        return;
    }
    flowbtn.selected = !flowbtn.selected;
    if (!flowView) {
        flowView =[[UIView alloc] initWithFrame:CGRectMake(0,BOUND_HIGHT-50-150, BOUND_WIDTH, 150)];
        [self.view addSubview:flowView];
        flowView.backgroundColor = [UIColor whiteColor];
        UIImageView *topgapImgage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, 1)];
        topgapImgage.backgroundColor = [UIColor lightGrayColor];
        [flowView addSubview:topgapImgage];
        CGFloat closeBtnW = 40;
        UIButton *closeBtn = [[UIButton alloc] initWithFrame:CGRectMake(BOUND_WIDTH-40, 3, closeBtnW, closeBtnW)];
        [closeBtn setImage:[UIImage imageNamed:@"close"] forState:UIControlStateNormal];
        [closeBtn addTarget:self action:@selector(closeflowview:) forControlEvents:UIControlEventTouchUpInside];
        closeBtn.imageEdgeInsets = UIEdgeInsetsMake(3,10,10+7,10);
        [flowView addSubview:closeBtn];
        
        CGFloat contenimgW = 30;
        CGFloat contenBtnW = (BOUND_WIDTH-contenimgW*2)/3;
        CGFloat contenBtnH = 40;
        CGFloat contenBtnY = closeBtnW;
//        NSArray*tepArr = @[@"1.阅读公告",@"2.交保证金",@"3.出价竞标",@"4.投标成功",@"5.验货提货"];
        NSArray*tepArr = @[CustomLocalizedString(@"1.阅读公告", nil),CustomLocalizedString(@"2.提交保证金", nil),CustomLocalizedString(@"3.出价竞标", nil),CustomLocalizedString(@"4.投标结束", nil)];
        for (int i = 0; i<tepArr.count; i++) {
            UIButton *btn1 = [[UIButton alloc] initWithFrame:CGRectMake(i%3*(contenBtnW+contenimgW), contenBtnY+i/3*(contenBtnH+10), contenBtnW+10, contenBtnH)];
            [btn1 setTitle:tepArr[i] forState:UIControlStateNormal];
            [btn1 setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            btn1.titleLabel.font = UIFont15;
            btn1.tag = 50+i;
            [btn1 addTarget:self action:@selector(flowtep:) forControlEvents:UIControlEventTouchUpInside];
            [flowView addSubview:btn1];
            
            if (i%3!=3&&i!=tepArr.count-1) {
                UIImageView *gapimgeV = [[UIImageView alloc] initWithFrame:CGRectMake(contenBtnW+i%3*(contenBtnW+contenimgW), contenBtnY+i/3*(contenBtnH+10)+12, contenimgW, contenBtnH-24)];
                gapimgeV.image = [UIImage imageNamed:@"liuchengjiantou"];
                gapimgeV.contentMode = UIViewContentModeScaleAspectFit;
                [flowView addSubview:gapimgeV];
            }
        }
    }
    
    flowView.alpha = 0;
    flowView.hidden = NO;
    [UIView animateWithDuration:0.5 animations:^{
        flowView.alpha =1;
    } completion:^(BOOL finished) {
        
    }];
    
}

-(void)queryPersonReadNameID{
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    BOOL islogin = [defaults boolForKey:@"islogin"];
   vip = [defaults objectForKey:@"vip"];
    
    if (!islogin) {
        return;
    }else{
        
        
        [networking AFNPOSTNotHUD:QUERYGRSMRZ withparameters:@{@"vip":vip} success:^(NSMutableDictionary *dic) {
            if ([dic[@"response"] isKindOfClass:[NSDictionary class]]) {
                NSDictionary *response=dic[@"response"];
                if (response.count>0) {
                    [defaults setBool:YES forKey:@"isRealName"];
                    
                    [defaults synchronize];
                    
                }
            }
        } error:nil];
        
    }
    
}



-(void)queryBusinessReadNameID{
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    BOOL islogin = [defaults boolForKey:@"islogin"];
   vip = [defaults objectForKey:@"vip"];
    if (!islogin) {
          return;
    }else{
      
        
        [networking AFNPOSTNotHUD:QUERYQYSMRZ withparameters:@{@"vip":vip} success:^(NSMutableDictionary *dic) {
            if ([dic[@"response"] isKindOfClass:[NSDictionary class]]) {
                NSDictionary *response=dic[@"response"];
 
                if (response.count>0) {
                    
                    NSUserDefaults *def=[NSUserDefaults standardUserDefaults];
                    [def setBool:YES forKey:@"isRealName"];
                    [def synchronize];
                    
                }
            }
        } error:nil];
        
    }
}


-(void)bid
{
    
  
    if (!_islogin) {
        
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请先登录", nil) toView:self.view];
        
        return;
    }
        

    NSUserDefaults *def=[NSUserDefaults standardUserDefaults];
    [self queryPersonReadNameID];
    [self queryBusinessReadNameID];
   
    if (![def boolForKey:@"isRealName"])  {
        
            [MBProgressHUD showError:CustomLocalizedString(@"您好，请先进行实名认证", nil) toView:self.view];
            return;
        }else{
            
            B_C_BibViewController *VC=[[B_C_BibViewController alloc] init];
            VC.title = CustomLocalizedString(@"出价竞标", nil);//@"出价竞标";
            VC.vip = vip;
            VC.bidModel = self.model;
            VC.preVC = self;
            [self.navigationController pushViewController:VC animated:YES];

        }
        
    }
    
- (void)bond
{
    
    
    if (!_islogin) {
        
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请先登录", nil) toView:self.view];
        
        return;
    }
    
    NSUserDefaults *def=[NSUserDefaults standardUserDefaults];
   
   
    [self queryPersonReadNameID];
    [self queryBusinessReadNameID];
    if (![def boolForKey:@"isRealName"])  {
        
        [MBProgressHUD showError:CustomLocalizedString(@"您好，请先进行实名认证", nil) toView:self.view];
        return;
    }

    
    if (_islogin) {
        if (_isDidBond) {
            [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"已经提交过保证金", nil) toView:self.view];
            return;
        }
     
        
        
       
        BondViewController *bondV = [[BondViewController alloc] init];
        bondV.title = CustomLocalizedString(@"提交保证金", nil);//@"提交保证金";
        bondV.bidModel = self.model;
        bondV.vip = vip;
        bondV.preVC = self;
        [self.navigationController pushViewController:bondV animated:YES];
    }else{
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"请先登录", nil) toView:self.view];
    }

    
}

- (void)flowtep:(UIButton*)btn
{
    switch (btn.tag) {
        case 50:
            
            break;
        case 51:
            [self bond];
            break;
        case 52:
            [self bid];
            break;
        case 53:
            
            break;
        case 54:
            
            break;
        default:
            break;
    }
}
- (void)closeflowview:(UIButton *)closeBtn
{
    [UIView animateWithDuration:0.5 animations:^{
        flowView.alpha =0;
    } completion:^(BOOL finished) {
        flowView.hidden = YES;
        flowBtn.selected = !flowBtn.selected;
    }];
}
#pragma mark - 图片放大
//放大
- (void)clickHeadImage:(UITapGestureRecognizer *)tap
{
    
    UIImageView *imgeV = (UIImageView *)tap.view;
    UIView *scBgView = [[UIView alloc] initWithFrame:self.view.frame];
    
    UIScrollView *ScaleScroview = [[UIScrollView alloc] initWithFrame:self.view.frame];
    ScaleScroview.delegate =self;
    ScaleScroview.tag=199998;
    ScaleScroview.backgroundColor = [UIColor whiteColor];
    ScaleScroview.delegate = self;
    ScaleScroview.maximumZoomScale = 3.0;
    ScaleScroview.minimumZoomScale = 1;
    
    UIImageView *imgeview= [[UIImageView alloc] initWithFrame:self.view.frame];
    imgeview.contentMode = UIViewContentModeScaleAspectFit;
    imgeview.userInteractionEnabled = YES;
    UITapGestureRecognizer *tapg = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(hideImage:)];
    [imgeview addGestureRecognizer:tapg];
    [ScaleScroview addSubview:imgeview];
    imgeview.image = imgeV.image;
    ScaleScroview.contentSize = self.view.frame.size;
    [scBgView addSubview:ScaleScroview];
    
    UIButton *save = [UIButton buttonWithType:UIButtonTypeSystem];
    [save setTitle:CustomLocalizedString(@"保存到相册", nil) forState:UIControlStateNormal];
    save.frame = CGRectMake(10, 30, 80, 30);
    [save addTarget:self action:@selector(saveToPhotoSource:) forControlEvents:UIControlEventTouchUpInside];
    [scBgView addSubview:save];
    [self.view addSubview:scBgView];
    
}
- (void)saveToPhotoSource:(UIButton *)btn
{
    UIView *bgView = btn.superview;
    UIScrollView *scV;
    for (UIView *view in bgView.subviews) {
        if ([view isKindOfClass:[UIScrollView class]]) {
            scV = (UIScrollView *)view;
        }
    }
    UIImageView *imageV = scV.subviews.firstObject;
    UIImageWriteToSavedPhotosAlbum(imageV.image, self, @selector(imageSavedToPhotosAlbum:didFinishSavingWithError:contextInfo:), nil);
}

//实现imageSavedToPhotosAlbum:didFinishSavingWithError:contextInfo:方法

- (void)imageSavedToPhotosAlbum:(UIImage *)image didFinishSavingWithError:(NSError *)error contextInfo:(void *)contextInfo
{
    NSString *message;
    if (!error) {
        message = CustomLocalizedString(@"成功保存到相册", nil);//@"成功保存到相册";
        [MBProgressHUD showNotPhotoError:message toView:self.view];
    }else
    {
//        message = [error description];
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"保存失败", nil) toView:self.view];
    }
//    HZLog(@"message is %@",message);
}
- (void)hideImage:(UITapGestureRecognizer *)tap
{
    UIView *imgev = tap.view;
    UIView *scView = imgev.superview;
    [scView.superview removeFromSuperview];
    scView = nil;
}
//获取图片后更改图片高度
-(void)subImageView:(UIView *)view ChangeHeight:(CGFloat)Chageheight
{
    CGSize contenSize = _scrollV.contentSize;
    contenSize.height += Chageheight;
    _scrollV.contentSize = contenSize;
    BOOL isAddHeigth = NO;
    for (UIView *subview in view.superview.subviews) {
        if (view==subview) {
            CGRect oldrect = subview.frame;
            oldrect.size.height +=Chageheight;
            subview.frame = oldrect;
            isAddHeigth = YES;
            continue;
        }
        if (isAddHeigth) {
            CGRect oldrect = subview.frame;
            oldrect.origin.y +=Chageheight;
            subview.frame = oldrect;
        }
    }
}
#pragma mark - ScrollViewDelegate
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView{
    
    if (scrollView.tag==199999) {
        // 记录scrollView 的当前位置，因为已经设置了分页效果，所以：位置/屏幕大小 = 第几页
        int current = scrollView.contentOffset.x/[UIScreen mainScreen].bounds.size.width;
        
        //根据scrollView 的位置对page 的当前页赋值
        UIPageControl *page = (UIPageControl *)[_scrollV viewWithTag:44];
        page.currentPage = current;
    }
}
-(UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView
{
    
    if (scrollView.tag==199998) {
        return scrollView.subviews.firstObject;
    }
    return nil;
}
- (void)didReceiveMemoryWarning {
     HZLog(@"aaaaaaaaa");
    [super didReceiveMemoryWarning];
   
    // Dispose of any resources that can be recreated.
}
//- (UIStatusBarStyle)preferredStatusBarStyle{
//    return UIStatusBarStyleDefault;
//}
@end
