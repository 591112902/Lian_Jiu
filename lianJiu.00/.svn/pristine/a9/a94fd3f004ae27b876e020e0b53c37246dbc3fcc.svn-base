//
//  SearchSupplyContenViewController.m
//  zaiShang
//
//  Created by cnmobi on 16/1/13.
//  Copyright © 2016年 CNMOBI. All rights reserved.
//

#import "SearchSupplyContenViewController.h"
#import "SATableViewCell.h"
#import "B_C_GViewController.h"
#import "PRJTabBarViewController.h"
#import "MJRefresh.h"
@interface SearchSupplyContenViewController ()<UITableViewDataSource,UITableViewDelegate>

@end

@implementation SearchSupplyContenViewController
{
    UITableView *_tableView;
    NSMutableArray *_dataSouc;
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    //    [self addNavigationItem];
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, BOUND_HIGHT)];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [_tableView registerNib:[UINib nibWithNibName:@"SATableViewCell" bundle:nil] forCellReuseIdentifier:@"SATableViewCell"];
    [self.view addSubview:_tableView];
    __weak UITableView *tableView = _tableView;
    WS(weakSelf);
    // 下拉刷新
    //    tableView.header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
    //        [weakSelf addDatasourceIsDown:YES];
    //        // 结束刷新
    //        [tableView.header endRefreshing];
    //    }];
    //    [tableView.header beginRefreshing];
    //    // 设置自动切换透明度(在导航栏下面自动隐藏)
    //    tableView.header.automaticallyChangeAlpha = YES;
    
    // 上拉刷新
    tableView.footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [weakSelf addDatasourceIsDown:NO];
        // 结束刷新
        [tableView.footer endRefreshing];
    }];
    
    
}
//内容接口
- (void)addDatasourceIsDown:(BOOL)isDown
{
    
    [networking AFNRequest:QUERYGOODSBYTITLE withparameters:self.parameters success:^(NSMutableDictionary *dic) {
        HZLog(@"%@",self.parameters);
        if ([dic[@"response"] isKindOfClass:[NSArray class]]) {
            NSArray *response = dic[@"response"];
            if (_isGongYing) {
                for (NSDictionary *temp in response) {
                    SupplyModel *model = [SupplyModel ModelWith:temp];
                    [_dataSouc addObject:model];
                }
            }else{
                for (NSDictionary *temp in response) {
                    PurchaseModel *model = [PurchaseModel ModelWith:temp];
                    [_dataSouc addObject:model];
                }
            }
            
            NSInteger pageNo = [self.parameters[@"pageNo"] integerValue];
            pageNo ++;
            [self.parameters setObject:[NSNumber numberWithInteger:pageNo] forKey:@"pageNo"];
        }
        [_tableView reloadData];
        
    } error:nil HUDAddView:self.view];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _dataSouc.count;
}
-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    SATableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SATableViewCell"];
    if (_isGongYing) {
        [cell fillCellWithModel:self.dataSouc[indexPath.row]];
    }else{
        [cell fillCellWithModel2:self.dataSouc[indexPath.row]];
    }
    return cell;
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 100.0;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
     B_C_GViewController *bidContenVC = [[B_C_GViewController alloc] init];
    if (_isGongYing) {
        bidContenVC.model = self.dataSouc[indexPath.row];
    }else{
        bidContenVC.Purmodel = self.dataSouc[indexPath.row];
    }
    [self.navigationController pushViewController:bidContenVC animated:YES];
    
    PRJTabBarViewController *tabar=(PRJTabBarViewController *)self.tabBarController;
    UINavigationController *nav = tabar.viewControllers.lastObject;
    MeVC *meVc = nav.viewControllers.firstObject;
    meVc.isRequestData = YES;
}


@end
