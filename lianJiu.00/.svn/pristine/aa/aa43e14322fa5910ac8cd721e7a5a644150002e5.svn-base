//
//  PhoneRecyceTableViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/10.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//

#import "PhoneRecyceTableViewController.h"
#import "PhoneRecyceTableViewCell.h"
#import "CommitSuccseViewController.h"
#import "DictionnaryModel.h"
#import "validate.h"
@interface PhoneRecyceTableViewController ()

@end

@implementation PhoneRecyceTableViewController

{
    NSString *identifier;
    
}
- (void)adjustmentTableView
{
    identifier = @"PhoneRecyceTableViewCell";
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, BOUND_WIDTH, 40)];
    label.text = CustomLocalizedString(@"填写回收单", nil);
    label.textColor = [UIColor lightGrayColor];
    label.textAlignment = NSTextAlignmentCenter;
    self.tableView.tableHeaderView = label;
    self.tableView.separatorStyle = UITableViewCellSelectionStyleNone;
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.backgroundColor = BGColor;
    [self.tableView registerNib:[UINib nibWithNibName:identifier bundle:nil] forCellReuseIdentifier:identifier];
    
    
    
}

-(void)addDataScour
{
//    NSArray *arr = @[@"联系姓名",@"联系电话",@"详细地址",@"手机品牌",@"手机型号",@"手机颜色",@"手机内存",@"故障说明",@"开关机情况",@"触摸及功能",@"拆机维修史",@"手机屏幕",@"手机成色"];
    
    NSArray *arr = @[CustomLocalizedString(@"联系姓名", nil),CustomLocalizedString(@"联系电话", nil),CustomLocalizedString(@"详细地址", nil),CustomLocalizedString(@"手机品牌", nil),CustomLocalizedString(@"手机型号", nil),CustomLocalizedString(@"手机颜色", nil),CustomLocalizedString(@"手机内存", nil),CustomLocalizedString(@"故障说明", nil),CustomLocalizedString(@"开关机情况", nil),CustomLocalizedString(@"触摸及功能", nil),CustomLocalizedString(@"拆机维修史", nil),CustomLocalizedString(@"手机屏幕", nil),CustomLocalizedString(@"手机成色", nil)];
    NSMutableArray *arr1 = [[NSMutableArray alloc] init];
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    NSString *name = [defaults objectForKey:@"name"];
    NSString *phone = [defaults objectForKey:@"phone"];
    for (int i=0; i<arr.count; i++) {
        NSString *str = arr[i];
        DictionnaryModel *model = [DictionnaryModel ModelWithDictionnary:@{str:@""}];
        if (i==0) {
            model.value = name;
        }else if(i==1){
            model.value = phone;
        }
        [arr1 addObject:model];
    }
    self.dataScour = [[NSMutableArray alloc] initWithObjects:arr1, nil];
}
-(void)addFootView
{
    
    self.footView = [[UIView alloc] init];
    
    CGFloat H = 10;
    [self addPhotoViiew:H];
}
-(void)addPhotoViiew:(CGFloat)H
{
    self.footView.frame = CGRectMake(0, 0, BOUND_WIDTH, H+(BOUND_WIDTH-40)/3+40+10+44+20);
    UICollectionViewFlowLayout *flowLayout=[[UICollectionViewFlowLayout alloc ]init];
    flowLayout.headerReferenceSize =  CGSizeMake(BOUND_WIDTH, 20);
    self.photoCollec = [[PhotoCollectionViewController alloc] initWithCollectionViewLayout:flowLayout];
    self.photoCollec.photoNumber = 30;
    self.photoCollec.delegate = self;
    self.photoCollec.headTitle =CustomLocalizedString(@"上传手机照片", nil);
    self.photoCollec.view.frame = CGRectMake(0, H, self.view.frame.size.width, (self.view.frame.size.width-40)/3+40);
    [self addChildViewController:self.photoCollec];
    [self.footView addSubview:self.photoCollec.view];
    [self.photoCollec didMoveToParentViewController:self];
    H +=(BOUND_WIDTH-40)/3+40+10;
    
    self.conmitBtn = [[UIButton alloc] initWithFrame:CGRectMake(10, H, BOUND_WIDTH-20, 44)];
    [self.conmitBtn setBackgroundImage:[UIImage imageNamed:@"fr_three_img_but"] forState:UIControlStateNormal];
    [self.conmitBtn addTarget:self action:@selector(ToCommit) forControlEvents:UIControlEventTouchUpInside];
    //    [self.conmitBtn setImage:[UIImage imageNamed:@"fr_three_img_but"] forState:UIControlStateNormal];
    [self.conmitBtn setTitle:CustomLocalizedString(@"提交", nil) forState:UIControlStateNormal];
    H += 44+20;
    self.footView.frame = CGRectMake(0, 0, BOUND_WIDTH, H);
    self.tableView.tableFooterView =self.footView;
    [self.footView addSubview:self.conmitBtn];
    [self.tableView reloadData];
}

- (void)ToCommit
{

    NSArray *arr = self.dataScour.firstObject;
    for (int i=0;i<arr.count;i++) {
        DictionnaryModel *model =arr[i];
        if (i==1) {
            if (![validate CheckInputPhone:model.title withText:model.value]) {
                return;
            }
        }else{
            if (![validate CheckInputAccount:model.title withText:model.value withminNum:1 withMaxNum:200]) {
                return;
            }
            
        }
    }
    if (![self isDidAddPhoto]) {
        return;
    }
    NSArray *dataArr= [self photoDataSoucToData];
    [networking AFNPOSTMutableArrfile:LOADFILE withparameters:nil dataName:@"file" dataSource:dataArr success:^(NSMutableDictionary *dic) {
        
        NSMutableDictionary *parameters = [[NSMutableDictionary alloc] initWithDictionary:@{@"photo":dic[@"response"]?dic[@"response"]:@""}];
        NSArray *p =@[@"name",@"phone",@"address",@"p_name",@"type",@"color",@"ram",@"fault",@"power",@"touch",@"preserve",@"screen",@"colour"];
        for (int i=0; i<p.count; i++) {
            DictionnaryModel *modle = arr[i];
            if (modle.value) {
                [parameters setObject:modle.value forKey:p[i]];
            }
        }
        HZLog(@"%@",parameters);
        [networking AFNPOST:ADDPHONERECYCL withparameters:parameters success:^(NSMutableDictionary *dic) {
            
            CommitSuccseViewController *CMVC = [[CommitSuccseViewController alloc] init];
            CMVC.title = self.title;
            CMVC.contenValue = CustomLocalizedString(@"提交成功", nil);
            CMVC.subValue =CustomLocalizedString(@"你的回收信息已经提交成功", nil);
            CMVC.image = [UIImage imageNamed:@"sucsses"];
            [self.navigationController pushViewController:CMVC animated:YES];
        } error:nil HUDAddView:self.view];
        
    } error:nil HUDAddView:self.view];
    
}
- (BOOL)strIsNilName:(NSString*)name WithText:(NSString *)text
{
    if (text.length==0) {
        [MBProgressHUD showNotPhotoError:[NSString stringWithFormat:@"%@%@",CustomLocalizedString(@"请填写:", nil),name] toView:self.view];
        return NO;
    }
    return YES;
}


#pragma mark - Table view data source


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 50;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0;
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSArray *arr = self.dataScour[indexPath.section];
    DictionnaryModel *modle = arr[indexPath.row];
    PhoneRecyceTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    cell.valueTF.delegate = self;
    cell.tilteL.text = modle.title;
    cell.valueTF.tag = 300+indexPath.row;
    cell.valueTF.text = modle.value;
//    if (indexPath.row<5) {
        cell.valueTF.placeholder = CustomLocalizedString(@"必填", nil);
//    }else{
//        cell.valueTF.placeholder = nil;
//    }
    if (indexPath.row==1) {
        cell.valueTF.keyboardType = UIKeyboardTypeNumberPad;
    }else{
        cell.valueTF.keyboardType = UIKeyboardTypeDefault;
    }
    return cell;
}
#pragma mark - uitextFileDelegate
-(void)textFieldDidEndEditing:(UITextField *)textField
{
    [textField setText:[textField.text filterEmoji]];
    NSInteger index = textField.tag-300;
    NSArray *arr = self.dataScour.firstObject;
    DictionnaryModel *modle = arr[index];
    modle.value = textField.text;
}
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@" "]&&textField.text.length<1) {
        return NO;
    }
    if ([string isEqualToString:@"\n"]){
        return YES;
    }
    
    NSInteger index = textField.tag-300;
  
    NSString * aString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    if (index ==1)
    {
        if ([aString length] > 11) {
            textField.text = [aString substringToIndex:11];
            return NO;
        }
    }else{
        if ([aString length] > 100) {
            textField.text = [aString substringToIndex:100];
            return NO;
        }
    }
    return YES;
}
@end
