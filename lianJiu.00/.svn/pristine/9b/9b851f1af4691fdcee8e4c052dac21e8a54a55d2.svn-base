//
//  LoginViewController.m
//  zaiShang
//
//  Created by cnmobi on 15/12/5.
//  Copyright © 2015年 CNMOBI. All rights reserved.
//
#import "LoginViewController.h"
#import "ForgotViewController.h"
#import "RegisterViewController.h"
#import "BidVC.h"
#import "PRJTabBarViewController.h"
#import "NSString+MD5.h"
#import "AccountModel.h"
#import "SelectViewController.h"
@interface LoginViewController ()
{
    UIButton *btnItem ;
}
@property (strong, nonatomic) IBOutlet UITextField *accountTF;
@property (strong, nonatomic) IBOutlet UITextField *passwordTF;
@property (strong, nonatomic) IBOutlet UIButton *luaguage;
@property (strong, nonatomic) IBOutlet UIButton *forgotPassword;
@property (strong, nonatomic) IBOutlet UIButton *loginBtn;
@property (strong, nonatomic) IBOutlet UIButton *registerBtn;

@end

@implementation LoginViewController


- (void)viewDidLoad {
    [super viewDidLoad];
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    self.accountTF.text = [defaults objectForKey:@"email"];
    self.accountTF.clearButtonMode = UITextFieldViewModeWhileEditing;
    self.passwordTF.text = [defaults objectForKey:@"www"];
    self.passwordTF.secureTextEntry  = YES;
    btnItem= [UIButton buttonWithType:UIButtonTypeCustom];
    btnItem.frame =CGRectMake(self.view.frame.origin.x,0, BOUND_WIDTH-540, BOUND_HIGHT-550);
    btnItem.titleLabel.lineBreakMode=NSLineBreakByWordWrapping;// 让其他语言可以显示
    [btnItem addTarget: self action: @selector(cansel) forControlEvents: UIControlEventTouchUpInside];
    UIBarButtonItem* item=[[UIBarButtonItem alloc]initWithCustomView:btnItem];
    self.navigationItem.leftBarButtonItem=item;
    
    // 开始显示language

    static dispatch_once_t onceToken;
        dispatch_once(&onceToken, ^{
        [_luaguage setTitle:@"Language" forState:UIControlStateNormal];
    });
    
    UIButton *btn = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 40, 40)];
    [btn setImage:[UIImage imageNamed:@"隐藏密码"] forState:UIControlStateNormal];
    [btn setImage:[UIImage imageNamed:@"显示密码"] forState:UIControlStateSelected];
    btn.imageEdgeInsets = UIEdgeInsetsMake(10, 15, 10, 5);
    [btn addTarget:self action:@selector(PasswordMingWen:) forControlEvents:UIControlEventTouchUpInside];
    btn.highlighted = NO;
    
    self.passwordTF.rightView = btn;
    self.passwordTF.rightViewMode = UITextFieldViewModeAlways;

    
   
    [self changeLanguage];
    
}

-(void)PasswordMingWen:(UIButton *)sender//  password 明文
{
    sender.selected = !sender.selected;
    self.passwordTF.secureTextEntry  = !self.passwordTF.secureTextEntry;
}

- (void)cansel{
    if (self.isBackMain) {
        PRJTabBarViewController *tabar = (PRJTabBarViewController *)self.view.window.rootViewController;
        tabar.toIndex = 0;
    }
    [self dismissViewControllerAnimated:YES completion:nil];
}
- (IBAction)Toregister:(id)sender {
    RegisterViewController *registe = [[RegisterViewController alloc] init];
    [self.navigationController pushViewController:registe animated:YES];
}
- (IBAction)chooesLanguage:(id)sender {

    SelectViewController *seVC = [[SelectViewController alloc] init];
    NSArray *list = @[@"简体中文",@"繁体中文",@"English",@"日本の",@"한국의"];
    NSArray *listValue = @[@"zh-Hans",@"zh-Hant",@"en",@"ja",@"ko"];
    WS(weakSelf);
    seVC.titleText = CustomLocalizedString(@"Language", nil);
    seVC.dataSource = list;
    seVC.didselc = ^(NSInteger a,NSString *str){
        NSString *lan = [InternationalControl userLanguage];
        
        if([lan isEqualToString:listValue[a]]){//判断当前的语言，进行改变
            
        }else{
            HZLog(@"%@", listValue[a]);
            [InternationalControl setUserlanguage:listValue[a]];
            //改变完成之后发送通知，告诉其他页面修改完成，提示刷新界面
            [[NSNotificationCenter defaultCenter] postNotificationName:@"changeLanguage" object:nil];
            [weakSelf changeLanguage];
        }
        
    };
    
    [self addChildViewController:seVC];
    [self.view addSubview:seVC.view];

}
-(void)changeLanguage{
    
    self.title = CustomLocalizedString(@"登录", nil);
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changeLanguage) name:@"changeLanguage" object:nil];
    [btnItem setTitle:CustomLocalizedString(@"取消", nil) forState:UIControlStateNormal];
  
    [_luaguage setTitle:CustomLocalizedString(@"Language", nil) forState:UIControlStateNormal];
    [self.forgotPassword setTitle:CustomLocalizedString(@"找回密码", nil) forState:UIControlStateNormal];
    [self.loginBtn setTitle:CustomLocalizedString(@"登 录", nil) forState:UIControlStateNormal];
    [self.registerBtn setTitle:CustomLocalizedString(@"注 册", nil) forState:UIControlStateNormal];
  
    self.passwordTF.placeholder = CustomLocalizedString(@"请输入登录密码", nil);
    self.accountTF.placeholder = CustomLocalizedString(@"请输入邮箱", nil);

}
- (IBAction)ForgotPpassword:(id)sender {
    ForgotViewController *forgotVC = [[ForgotViewController alloc] init];
    [self.navigationController pushViewController:forgotVC animated:YES];
}
- (IBAction)ToLogin:(id)sender {
//以下写会出现问题 text 不等于空  也可以  self.accountTF.text.length=0;

    if (![self.accountTF.text isEqualToString:@""]&&![self.passwordTF.text isEqualToString:@""]) {
        if ([self CheckInputEail:self.accountTF.text]) {
            NSDictionary *infoDict = [[NSBundle mainBundle] infoDictionary];
            NSString *currentVersion = [infoDict objectForKey:@"CFBundleShortVersionString"];
            NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
            NSString *deviceTokenStr =[defaults objectForKey:@"plusToken"];
            NSString *str = @"";
#if TARGET_IPHONE_SIMULATOR
            
              str = @"111";
#else
              str = @"888888888888888888888888888888";

#endif
            deviceTokenStr = deviceTokenStr?deviceTokenStr:str;

            NSDictionary *parameters = @{@"name":self.accountTF.text,@"pwd":self.passwordTF.text,@"equipment":@"IOS",@"edition":currentVersion,@"token":deviceTokenStr};

            [networking AFNPOSTNotCode:LOGIN withparameters:parameters success:^(NSMutableDictionary *dic) {
//                HZLog(@"%@---%@",dic,dic[@"message"]);
                NSNumber *code=dic[@"code"];
                if ([code isEqualToNumber:@0]||[code isEqualToNumber:@-3]) {
                    NSDictionary *responseDic = dic[@"response"];
                    [MBProgressHUD showSuccess:CustomLocalizedString(@"登录成功", nil) toView:self.view.window];
                    
                    [defaults setObject:responseDic[@"email"] forKey:@"email"];
                    [defaults setObject:responseDic[@"phone"] forKey:@"phone"];
                    [defaults setObject:responseDic[@"vip"] forKey:@"vip"];
                    [defaults setObject:parameters[@"pwd"] forKey:@"www"];
                    [defaults setObject:responseDic[@"payment"] forKey:@"payment"];
                    [defaults setObject:responseDic[@"sessionid"] forKey:@"sessionid"];
                    [defaults setBool:YES forKey:@"islogin"];
                    [defaults setObject:[NSDate date] forKey:@"loginDate"];
                    [self queryPersonReadNameID];
                    [self queryBusinessReadNameID];
                    [defaults synchronize];
                    AccountModel *model = [AccountModel ModelWith:responseDic];
                    [NSKeyedArchiver archiveRootObject:model toFile:ACCOUNTPATH];
                    [self dismissViewControllerAnimated:YES completion:^{
                     
                    }];
                }else if([code isEqualToNumber:@2]){
                    [MBProgressHUD showError:CustomLocalizedString(@"网络不给力,重新启动应用试试", nil) toView:self.view];
                }else{

//                    [MBProgressHUD showError:dic[@"message"] toView:self.view];
                      [MBProgressHUD showError:CustomLocalizedString(dic[@"message"], nil) toView:self.view];


                }
                
            } error:nil HUDAddView:self.view];
           
        }
        
    }else{
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"账户或密码不能为空", nil) toView:self.view];
    }
}





//#warning 查询是否已经实名认证
-(void)queryPersonReadNameID{
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    BOOL islogin = [defaults boolForKey:@"islogin"];
    NSString *vip = [defaults objectForKey:@"vip"];
    
    if (!islogin) {
        return;
    }else{

        
        [networking AFNPOSTNotHUD:QUERYGRSMRZ withparameters:@{@"vip":vip} success:^(NSMutableDictionary *dic) {
            if ([dic[@"response"] isKindOfClass:[NSDictionary class]]) {
                NSDictionary *response=dic[@"response"];
                if (response.count>0) {
                    [defaults setBool:YES forKey:@"isRealName"];
                    
                    [defaults synchronize];
             
                }
            }
        } error:nil];
        
    }
    
}



-(void)queryBusinessReadNameID{
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    BOOL islogin = [defaults boolForKey:@"islogin"];
    NSString *vip = [defaults objectForKey:@"vip"];
    if (!islogin) {
         return;
    }else{
  
     
        [networking AFNPOSTNotHUD:QUERYQYSMRZ withparameters:@{@"vip":vip} success:^(NSMutableDictionary *dic) {
            if ([dic[@"response"] isKindOfClass:[NSDictionary class]]) {
                NSDictionary *response=dic[@"response"];
                if (response.count>0) {
                    
                    NSUserDefaults *def=[NSUserDefaults standardUserDefaults];
                    [def setBool:YES forKey:@"isRealName"];
                    [def synchronize];
                    
                }
            }
        } error:nil];
        
    }
}


//4、判断邮箱

- (BOOL)CheckInputEail:(NSString *)text {
    
    NSString *Regex = @"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}";
    
    NSPredicate *emailTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", Regex];


    if (![emailTest evaluateWithObject:text]) {
        [MBProgressHUD showNotPhotoError:CustomLocalizedString(@"您输入的账号不存在", nil) toView:[UIApplication sharedApplication].keyWindow];
        return NO;
    }
    return YES;
    
}
-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    if (textField==self.accountTF) {
        [self.passwordTF becomeFirstResponder];
    }else{
        [textField resignFirstResponder];
    }
    return YES;
}


@end
